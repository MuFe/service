// Code generated by protoc-gen-go. DO NOT EDIT.
// source: live.proto

package app

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetLiveDataRequest struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLiveDataRequest) Reset()         { *m = GetLiveDataRequest{} }
func (m *GetLiveDataRequest) String() string { return proto.CompactTextString(m) }
func (*GetLiveDataRequest) ProtoMessage()    {}
func (*GetLiveDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{0}
}

func (m *GetLiveDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLiveDataRequest.Unmarshal(m, b)
}
func (m *GetLiveDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLiveDataRequest.Marshal(b, m, deterministic)
}
func (m *GetLiveDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLiveDataRequest.Merge(m, src)
}
func (m *GetLiveDataRequest) XXX_Size() int {
	return xxx_messageInfo_GetLiveDataRequest.Size(m)
}
func (m *GetLiveDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLiveDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLiveDataRequest proto.InternalMessageInfo

func (m *GetLiveDataRequest) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type CreateLiveResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Pass                 string   `protobuf:"bytes,2,opt,name=pass,proto3" json:"pass,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLiveResponse) Reset()         { *m = CreateLiveResponse{} }
func (m *CreateLiveResponse) String() string { return proto.CompactTextString(m) }
func (*CreateLiveResponse) ProtoMessage()    {}
func (*CreateLiveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{1}
}

func (m *CreateLiveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLiveResponse.Unmarshal(m, b)
}
func (m *CreateLiveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLiveResponse.Marshal(b, m, deterministic)
}
func (m *CreateLiveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLiveResponse.Merge(m, src)
}
func (m *CreateLiveResponse) XXX_Size() int {
	return xxx_messageInfo_CreateLiveResponse.Size(m)
}
func (m *CreateLiveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLiveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLiveResponse proto.InternalMessageInfo

func (m *CreateLiveResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateLiveResponse) GetPass() string {
	if m != nil {
		return m.Pass
	}
	return ""
}

type TeamData struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Head                 string   `protobuf:"bytes,3,opt,name=head,proto3" json:"head,omitempty"`
	Score                string   `protobuf:"bytes,4,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamData) Reset()         { *m = TeamData{} }
func (m *TeamData) String() string { return proto.CompactTextString(m) }
func (*TeamData) ProtoMessage()    {}
func (*TeamData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{2}
}

func (m *TeamData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamData.Unmarshal(m, b)
}
func (m *TeamData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamData.Marshal(b, m, deterministic)
}
func (m *TeamData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamData.Merge(m, src)
}
func (m *TeamData) XXX_Size() int {
	return xxx_messageInfo_TeamData.Size(m)
}
func (m *TeamData) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamData.DiscardUnknown(m)
}

var xxx_messageInfo_TeamData proto.InternalMessageInfo

func (m *TeamData) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TeamData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TeamData) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *TeamData) GetScore() string {
	if m != nil {
		return m.Score
	}
	return ""
}

type TeamMemberData struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Number               string   `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	Id                   int64    `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Head                 string   `protobuf:"bytes,4,opt,name=head,proto3" json:"head,omitempty"`
	Uid                  int64    `protobuf:"varint,5,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamMemberData) Reset()         { *m = TeamMemberData{} }
func (m *TeamMemberData) String() string { return proto.CompactTextString(m) }
func (*TeamMemberData) ProtoMessage()    {}
func (*TeamMemberData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{3}
}

func (m *TeamMemberData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamMemberData.Unmarshal(m, b)
}
func (m *TeamMemberData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamMemberData.Marshal(b, m, deterministic)
}
func (m *TeamMemberData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamMemberData.Merge(m, src)
}
func (m *TeamMemberData) XXX_Size() int {
	return xxx_messageInfo_TeamMemberData.Size(m)
}
func (m *TeamMemberData) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamMemberData.DiscardUnknown(m)
}

var xxx_messageInfo_TeamMemberData proto.InternalMessageInfo

func (m *TeamMemberData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TeamMemberData) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *TeamMemberData) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TeamMemberData) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *TeamMemberData) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type GetLiveData struct {
	Id                   int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Address              string       `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Start                int64        `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	End                  int64        `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	Status               int64        `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Home                 *TeamData    `protobuf:"bytes,6,opt,name=home,proto3" json:"home,omitempty"`
	Visiting             *TeamData    `protobuf:"bytes,7,opt,name=visiting,proto3" json:"visiting,omitempty"`
	HomeScore            string       `protobuf:"bytes,8,opt,name=home_score,json=homeScore,proto3" json:"home_score,omitempty"`
	VisitingScore        string       `protobuf:"bytes,9,opt,name=visiting_score,json=visitingScore,proto3" json:"visiting_score,omitempty"`
	Type                 int64        `protobuf:"varint,10,opt,name=type,proto3" json:"type,omitempty"`
	Info                 []*ScoreData `protobuf:"bytes,11,rep,name=info,proto3" json:"info,omitempty"`
	Number               int64        `protobuf:"varint,12,opt,name=number,proto3" json:"number,omitempty"`
	User                 []int64      `protobuf:"varint,13,rep,packed,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetLiveData) Reset()         { *m = GetLiveData{} }
func (m *GetLiveData) String() string { return proto.CompactTextString(m) }
func (*GetLiveData) ProtoMessage()    {}
func (*GetLiveData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{4}
}

func (m *GetLiveData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLiveData.Unmarshal(m, b)
}
func (m *GetLiveData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLiveData.Marshal(b, m, deterministic)
}
func (m *GetLiveData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLiveData.Merge(m, src)
}
func (m *GetLiveData) XXX_Size() int {
	return xxx_messageInfo_GetLiveData.Size(m)
}
func (m *GetLiveData) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLiveData.DiscardUnknown(m)
}

var xxx_messageInfo_GetLiveData proto.InternalMessageInfo

func (m *GetLiveData) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetLiveData) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetLiveData) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetLiveData) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *GetLiveData) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetLiveData) GetHome() *TeamData {
	if m != nil {
		return m.Home
	}
	return nil
}

func (m *GetLiveData) GetVisiting() *TeamData {
	if m != nil {
		return m.Visiting
	}
	return nil
}

func (m *GetLiveData) GetHomeScore() string {
	if m != nil {
		return m.HomeScore
	}
	return ""
}

func (m *GetLiveData) GetVisitingScore() string {
	if m != nil {
		return m.VisitingScore
	}
	return ""
}

func (m *GetLiveData) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GetLiveData) GetInfo() []*ScoreData {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *GetLiveData) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *GetLiveData) GetUser() []int64 {
	if m != nil {
		return m.User
	}
	return nil
}

type GetLiveDataResponse struct {
	List                 []*GetLiveDataResult `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetLiveDataResponse) Reset()         { *m = GetLiveDataResponse{} }
func (m *GetLiveDataResponse) String() string { return proto.CompactTextString(m) }
func (*GetLiveDataResponse) ProtoMessage()    {}
func (*GetLiveDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{5}
}

func (m *GetLiveDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLiveDataResponse.Unmarshal(m, b)
}
func (m *GetLiveDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLiveDataResponse.Marshal(b, m, deterministic)
}
func (m *GetLiveDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLiveDataResponse.Merge(m, src)
}
func (m *GetLiveDataResponse) XXX_Size() int {
	return xxx_messageInfo_GetLiveDataResponse.Size(m)
}
func (m *GetLiveDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLiveDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLiveDataResponse proto.InternalMessageInfo

func (m *GetLiveDataResponse) GetList() []*GetLiveDataResult {
	if m != nil {
		return m.List
	}
	return nil
}

type GetLiveDataResult struct {
	List                 []*GetLiveData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Type                 int64          `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetLiveDataResult) Reset()         { *m = GetLiveDataResult{} }
func (m *GetLiveDataResult) String() string { return proto.CompactTextString(m) }
func (*GetLiveDataResult) ProtoMessage()    {}
func (*GetLiveDataResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{6}
}

func (m *GetLiveDataResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLiveDataResult.Unmarshal(m, b)
}
func (m *GetLiveDataResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLiveDataResult.Marshal(b, m, deterministic)
}
func (m *GetLiveDataResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLiveDataResult.Merge(m, src)
}
func (m *GetLiveDataResult) XXX_Size() int {
	return xxx_messageInfo_GetLiveDataResult.Size(m)
}
func (m *GetLiveDataResult) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLiveDataResult.DiscardUnknown(m)
}

var xxx_messageInfo_GetLiveDataResult proto.InternalMessageInfo

func (m *GetLiveDataResult) GetList() []*GetLiveData {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *GetLiveDataResult) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

type CreateLiveRequest struct {
	Type                 int64             `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Uid                  int64             `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Address              string            `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Start                int64             `protobuf:"varint,4,opt,name=start,proto3" json:"start,omitempty"`
	Home                 string            `protobuf:"bytes,5,opt,name=home,proto3" json:"home,omitempty"`
	Visiting             string            `protobuf:"bytes,6,opt,name=visiting,proto3" json:"visiting,omitempty"`
	HomeMember           []*TeamMemberData `protobuf:"bytes,7,rep,name=homeMember,proto3" json:"homeMember,omitempty"`
	VisitingMember       []*TeamMemberData `protobuf:"bytes,8,rep,name=visitingMember,proto3" json:"visitingMember,omitempty"`
	ClassId              int64             `protobuf:"varint,9,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	MatchId              int64             `protobuf:"varint,10,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	PackageId            int64             `protobuf:"varint,11,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateLiveRequest) Reset()         { *m = CreateLiveRequest{} }
func (m *CreateLiveRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLiveRequest) ProtoMessage()    {}
func (*CreateLiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{7}
}

func (m *CreateLiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLiveRequest.Unmarshal(m, b)
}
func (m *CreateLiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLiveRequest.Marshal(b, m, deterministic)
}
func (m *CreateLiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLiveRequest.Merge(m, src)
}
func (m *CreateLiveRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLiveRequest.Size(m)
}
func (m *CreateLiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLiveRequest proto.InternalMessageInfo

func (m *CreateLiveRequest) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *CreateLiveRequest) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *CreateLiveRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CreateLiveRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *CreateLiveRequest) GetHome() string {
	if m != nil {
		return m.Home
	}
	return ""
}

func (m *CreateLiveRequest) GetVisiting() string {
	if m != nil {
		return m.Visiting
	}
	return ""
}

func (m *CreateLiveRequest) GetHomeMember() []*TeamMemberData {
	if m != nil {
		return m.HomeMember
	}
	return nil
}

func (m *CreateLiveRequest) GetVisitingMember() []*TeamMemberData {
	if m != nil {
		return m.VisitingMember
	}
	return nil
}

func (m *CreateLiveRequest) GetClassId() int64 {
	if m != nil {
		return m.ClassId
	}
	return 0
}

func (m *CreateLiveRequest) GetMatchId() int64 {
	if m != nil {
		return m.MatchId
	}
	return 0
}

func (m *CreateLiveRequest) GetPackageId() int64 {
	if m != nil {
		return m.PackageId
	}
	return 0
}

type StartLivRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Pass                 string   `protobuf:"bytes,2,opt,name=pass,proto3" json:"pass,omitempty"`
	Uid                  int64    `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartLivRequest) Reset()         { *m = StartLivRequest{} }
func (m *StartLivRequest) String() string { return proto.CompactTextString(m) }
func (*StartLivRequest) ProtoMessage()    {}
func (*StartLivRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{8}
}

func (m *StartLivRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartLivRequest.Unmarshal(m, b)
}
func (m *StartLivRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartLivRequest.Marshal(b, m, deterministic)
}
func (m *StartLivRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartLivRequest.Merge(m, src)
}
func (m *StartLivRequest) XXX_Size() int {
	return xxx_messageInfo_StartLivRequest.Size(m)
}
func (m *StartLivRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartLivRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartLivRequest proto.InternalMessageInfo

func (m *StartLivRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *StartLivRequest) GetPass() string {
	if m != nil {
		return m.Pass
	}
	return ""
}

func (m *StartLivRequest) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *StartLivRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type EndLivRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid                  int64    `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndLivRequest) Reset()         { *m = EndLivRequest{} }
func (m *EndLivRequest) String() string { return proto.CompactTextString(m) }
func (*EndLivRequest) ProtoMessage()    {}
func (*EndLivRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{9}
}

func (m *EndLivRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndLivRequest.Unmarshal(m, b)
}
func (m *EndLivRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndLivRequest.Marshal(b, m, deterministic)
}
func (m *EndLivRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndLivRequest.Merge(m, src)
}
func (m *EndLivRequest) XXX_Size() int {
	return xxx_messageInfo_EndLivRequest.Size(m)
}
func (m *EndLivRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EndLivRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EndLivRequest proto.InternalMessageInfo

func (m *EndLivRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EndLivRequest) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type StartLivResponse struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	End                  int64    `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartLivResponse) Reset()         { *m = StartLivResponse{} }
func (m *StartLivResponse) String() string { return proto.CompactTextString(m) }
func (*StartLivResponse) ProtoMessage()    {}
func (*StartLivResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{10}
}

func (m *StartLivResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartLivResponse.Unmarshal(m, b)
}
func (m *StartLivResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartLivResponse.Marshal(b, m, deterministic)
}
func (m *StartLivResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartLivResponse.Merge(m, src)
}
func (m *StartLivResponse) XXX_Size() int {
	return xxx_messageInfo_StartLivResponse.Size(m)
}
func (m *StartLivResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartLivResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartLivResponse proto.InternalMessageInfo

func (m *StartLivResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *StartLivResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *StartLivResponse) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

type ScoreData struct {
	Id                   int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Time                 string          `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	IsHome               bool            `protobuf:"varint,3,opt,name=isHome,proto3" json:"isHome,omitempty"`
	Data                 *TeamMemberData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ScoreData) Reset()         { *m = ScoreData{} }
func (m *ScoreData) String() string { return proto.CompactTextString(m) }
func (*ScoreData) ProtoMessage()    {}
func (*ScoreData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{11}
}

func (m *ScoreData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScoreData.Unmarshal(m, b)
}
func (m *ScoreData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScoreData.Marshal(b, m, deterministic)
}
func (m *ScoreData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScoreData.Merge(m, src)
}
func (m *ScoreData) XXX_Size() int {
	return xxx_messageInfo_ScoreData.Size(m)
}
func (m *ScoreData) XXX_DiscardUnknown() {
	xxx_messageInfo_ScoreData.DiscardUnknown(m)
}

var xxx_messageInfo_ScoreData proto.InternalMessageInfo

func (m *ScoreData) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ScoreData) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *ScoreData) GetIsHome() bool {
	if m != nil {
		return m.IsHome
	}
	return false
}

func (m *ScoreData) GetData() *TeamMemberData {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateScoreRequest struct {
	Id                   int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HomeScore            string       `protobuf:"bytes,2,opt,name=home_score,json=homeScore,proto3" json:"home_score,omitempty"`
	VisitingScore        string       `protobuf:"bytes,3,opt,name=visiting_score,json=visitingScore,proto3" json:"visiting_score,omitempty"`
	List                 []*ScoreData `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpdateScoreRequest) Reset()         { *m = UpdateScoreRequest{} }
func (m *UpdateScoreRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateScoreRequest) ProtoMessage()    {}
func (*UpdateScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{12}
}

func (m *UpdateScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateScoreRequest.Unmarshal(m, b)
}
func (m *UpdateScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateScoreRequest.Marshal(b, m, deterministic)
}
func (m *UpdateScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateScoreRequest.Merge(m, src)
}
func (m *UpdateScoreRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateScoreRequest.Size(m)
}
func (m *UpdateScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateScoreRequest proto.InternalMessageInfo

func (m *UpdateScoreRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateScoreRequest) GetHomeScore() string {
	if m != nil {
		return m.HomeScore
	}
	return ""
}

func (m *UpdateScoreRequest) GetVisitingScore() string {
	if m != nil {
		return m.VisitingScore
	}
	return ""
}

func (m *UpdateScoreRequest) GetList() []*ScoreData {
	if m != nil {
		return m.List
	}
	return nil
}

type WatchLiveRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid                  int64    `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Pass                 string   `protobuf:"bytes,3,opt,name=pass,proto3" json:"pass,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchLiveRequest) Reset()         { *m = WatchLiveRequest{} }
func (m *WatchLiveRequest) String() string { return proto.CompactTextString(m) }
func (*WatchLiveRequest) ProtoMessage()    {}
func (*WatchLiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{13}
}

func (m *WatchLiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchLiveRequest.Unmarshal(m, b)
}
func (m *WatchLiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchLiveRequest.Marshal(b, m, deterministic)
}
func (m *WatchLiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchLiveRequest.Merge(m, src)
}
func (m *WatchLiveRequest) XXX_Size() int {
	return xxx_messageInfo_WatchLiveRequest.Size(m)
}
func (m *WatchLiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchLiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchLiveRequest proto.InternalMessageInfo

func (m *WatchLiveRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *WatchLiveRequest) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *WatchLiveRequest) GetPass() string {
	if m != nil {
		return m.Pass
	}
	return ""
}

type PackageData struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Max                  int64    `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
	Duration             int64    `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Price                int64    `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	SkuId                int64    `protobuf:"varint,6,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageData) Reset()         { *m = PackageData{} }
func (m *PackageData) String() string { return proto.CompactTextString(m) }
func (*PackageData) ProtoMessage()    {}
func (*PackageData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{14}
}

func (m *PackageData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageData.Unmarshal(m, b)
}
func (m *PackageData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageData.Marshal(b, m, deterministic)
}
func (m *PackageData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageData.Merge(m, src)
}
func (m *PackageData) XXX_Size() int {
	return xxx_messageInfo_PackageData.Size(m)
}
func (m *PackageData) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageData.DiscardUnknown(m)
}

var xxx_messageInfo_PackageData proto.InternalMessageInfo

func (m *PackageData) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PackageData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PackageData) GetMax() int64 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *PackageData) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *PackageData) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *PackageData) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

type PackageDataResponse struct {
	List                 []*PackageData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PackageDataResponse) Reset()         { *m = PackageDataResponse{} }
func (m *PackageDataResponse) String() string { return proto.CompactTextString(m) }
func (*PackageDataResponse) ProtoMessage()    {}
func (*PackageDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{15}
}

func (m *PackageDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageDataResponse.Unmarshal(m, b)
}
func (m *PackageDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageDataResponse.Marshal(b, m, deterministic)
}
func (m *PackageDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageDataResponse.Merge(m, src)
}
func (m *PackageDataResponse) XXX_Size() int {
	return xxx_messageInfo_PackageDataResponse.Size(m)
}
func (m *PackageDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PackageDataResponse proto.InternalMessageInfo

func (m *PackageDataResponse) GetList() []*PackageData {
	if m != nil {
		return m.List
	}
	return nil
}

type TeamMemberRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamMemberRequest) Reset()         { *m = TeamMemberRequest{} }
func (m *TeamMemberRequest) String() string { return proto.CompactTextString(m) }
func (*TeamMemberRequest) ProtoMessage()    {}
func (*TeamMemberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{16}
}

func (m *TeamMemberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamMemberRequest.Unmarshal(m, b)
}
func (m *TeamMemberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamMemberRequest.Marshal(b, m, deterministic)
}
func (m *TeamMemberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamMemberRequest.Merge(m, src)
}
func (m *TeamMemberRequest) XXX_Size() int {
	return xxx_messageInfo_TeamMemberRequest.Size(m)
}
func (m *TeamMemberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamMemberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TeamMemberRequest proto.InternalMessageInfo

func (m *TeamMemberRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type TeamMemberResponse struct {
	HomeMember           []*TeamMemberData `protobuf:"bytes,1,rep,name=homeMember,proto3" json:"homeMember,omitempty"`
	VisitingMember       []*TeamMemberData `protobuf:"bytes,2,rep,name=visitingMember,proto3" json:"visitingMember,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TeamMemberResponse) Reset()         { *m = TeamMemberResponse{} }
func (m *TeamMemberResponse) String() string { return proto.CompactTextString(m) }
func (*TeamMemberResponse) ProtoMessage()    {}
func (*TeamMemberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{17}
}

func (m *TeamMemberResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamMemberResponse.Unmarshal(m, b)
}
func (m *TeamMemberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamMemberResponse.Marshal(b, m, deterministic)
}
func (m *TeamMemberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamMemberResponse.Merge(m, src)
}
func (m *TeamMemberResponse) XXX_Size() int {
	return xxx_messageInfo_TeamMemberResponse.Size(m)
}
func (m *TeamMemberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamMemberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TeamMemberResponse proto.InternalMessageInfo

func (m *TeamMemberResponse) GetHomeMember() []*TeamMemberData {
	if m != nil {
		return m.HomeMember
	}
	return nil
}

func (m *TeamMemberResponse) GetVisitingMember() []*TeamMemberData {
	if m != nil {
		return m.VisitingMember
	}
	return nil
}

type LiveRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LiveRequest) Reset()         { *m = LiveRequest{} }
func (m *LiveRequest) String() string { return proto.CompactTextString(m) }
func (*LiveRequest) ProtoMessage()    {}
func (*LiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{18}
}

func (m *LiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiveRequest.Unmarshal(m, b)
}
func (m *LiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiveRequest.Marshal(b, m, deterministic)
}
func (m *LiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveRequest.Merge(m, src)
}
func (m *LiveRequest) XXX_Size() int {
	return xxx_messageInfo_LiveRequest.Size(m)
}
func (m *LiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LiveRequest proto.InternalMessageInfo

func (m *LiveRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*GetLiveDataRequest)(nil), "app.GetLiveDataRequest")
	proto.RegisterType((*CreateLiveResponse)(nil), "app.CreateLiveResponse")
	proto.RegisterType((*TeamData)(nil), "app.TeamData")
	proto.RegisterType((*TeamMemberData)(nil), "app.TeamMemberData")
	proto.RegisterType((*GetLiveData)(nil), "app.GetLiveData")
	proto.RegisterType((*GetLiveDataResponse)(nil), "app.GetLiveDataResponse")
	proto.RegisterType((*GetLiveDataResult)(nil), "app.GetLiveDataResult")
	proto.RegisterType((*CreateLiveRequest)(nil), "app.CreateLiveRequest")
	proto.RegisterType((*StartLivRequest)(nil), "app.StartLivRequest")
	proto.RegisterType((*EndLivRequest)(nil), "app.EndLivRequest")
	proto.RegisterType((*StartLivResponse)(nil), "app.StartLivResponse")
	proto.RegisterType((*ScoreData)(nil), "app.ScoreData")
	proto.RegisterType((*UpdateScoreRequest)(nil), "app.UpdateScoreRequest")
	proto.RegisterType((*WatchLiveRequest)(nil), "app.WatchLiveRequest")
	proto.RegisterType((*PackageData)(nil), "app.PackageData")
	proto.RegisterType((*PackageDataResponse)(nil), "app.PackageDataResponse")
	proto.RegisterType((*TeamMemberRequest)(nil), "app.TeamMemberRequest")
	proto.RegisterType((*TeamMemberResponse)(nil), "app.TeamMemberResponse")
	proto.RegisterType((*LiveRequest)(nil), "app.LiveRequest")
}

func init() { proto.RegisterFile("live.proto", fileDescriptor_c9b1f08afb3d995e) }

var fileDescriptor_c9b1f08afb3d995e = []byte{
	// 979 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x6e, 0xdc, 0x44,
	0x14, 0x96, 0x7f, 0x76, 0xd7, 0x7b, 0xdc, 0x84, 0xcd, 0xa4, 0x4d, 0xcd, 0x4a, 0x95, 0x96, 0xe1,
	0x2f, 0x20, 0x11, 0x89, 0x84, 0x22, 0xa0, 0x08, 0x09, 0x01, 0xa2, 0x2b, 0xb5, 0x08, 0x39, 0xa0,
	0x72, 0x17, 0x4d, 0xd7, 0x43, 0x62, 0x25, 0xf6, 0x1a, 0xcf, 0x78, 0x69, 0x5f, 0x80, 0x2b, 0xc4,
	0x63, 0xf0, 0x5c, 0xbc, 0x01, 0xaf, 0x80, 0xce, 0xcc, 0xd8, 0x1e, 0xc7, 0xde, 0x24, 0xe2, 0x6e,
	0xe6, 0x9c, 0x33, 0xe7, 0xf7, 0x3b, 0x9f, 0x0d, 0x70, 0x95, 0x6e, 0xf8, 0x51, 0x51, 0xae, 0xe5,
	0x9a, 0x78, 0xac, 0x28, 0xe6, 0x90, 0x30, 0xc9, 0xb4, 0x80, 0xbe, 0x07, 0xe4, 0x7b, 0x2e, 0x9f,
	0xa5, 0x1b, 0xfe, 0x2d, 0x93, 0x2c, 0xe6, 0xbf, 0x55, 0x5c, 0x48, 0x32, 0x03, 0xaf, 0x4a, 0x93,
	0xc8, 0x59, 0x38, 0x87, 0x5e, 0x8c, 0x47, 0xfa, 0x19, 0x90, 0x6f, 0x4a, 0xce, 0x24, 0x47, 0xd3,
	0x98, 0x8b, 0x62, 0x9d, 0x0b, 0x4e, 0x76, 0xc1, 0x6d, 0xcc, 0xdc, 0x34, 0x21, 0x04, 0xfc, 0x82,
	0x09, 0x11, 0xb9, 0x0b, 0xe7, 0x70, 0x1a, 0xab, 0x33, 0xfd, 0x05, 0x82, 0x9f, 0x38, 0xcb, 0xd0,
	0xfd, 0x90, 0x7d, 0xce, 0x32, 0x5e, 0xdb, 0xe3, 0x19, 0x65, 0x17, 0x9c, 0x25, 0x91, 0xa7, 0x65,
	0x78, 0x26, 0xf7, 0x61, 0x24, 0x56, 0xeb, 0x92, 0x47, 0xbe, 0x12, 0xea, 0x0b, 0x2d, 0x61, 0x17,
	0x3d, 0x3f, 0xe7, 0xd9, 0x4b, 0x5e, 0x2a, 0xff, 0xb5, 0x3f, 0xc7, 0xf2, 0x77, 0x00, 0xe3, 0xbc,
	0x42, 0x0b, 0x13, 0xc5, 0xdc, 0x4c, 0x2e, 0x9e, 0x9d, 0x8b, 0x8a, 0xeb, 0x5b, 0x71, 0x4d, 0x1f,
	0x46, 0x6d, 0x1f, 0xfe, 0x75, 0x21, 0xb4, 0x1a, 0xd6, 0xab, 0x28, 0x82, 0x09, 0x4b, 0x92, 0x92,
	0x37, 0x4d, 0xa8, 0xaf, 0xaa, 0x06, 0xc9, 0x4a, 0x69, 0x42, 0xea, 0x0b, 0x46, 0xe0, 0xb9, 0x0e,
	0xea, 0xc5, 0x78, 0xc4, 0x7c, 0x85, 0x64, 0xb2, 0x12, 0x26, 0xac, 0xb9, 0x91, 0xb7, 0xc0, 0xbf,
	0x58, 0x67, 0x3c, 0x1a, 0x2f, 0x9c, 0xc3, 0xf0, 0x78, 0xe7, 0x88, 0x15, 0xc5, 0x51, 0xdd, 0xd8,
	0x58, 0xa9, 0xc8, 0x07, 0x10, 0x6c, 0x52, 0x91, 0xca, 0x34, 0x3f, 0x8f, 0x26, 0x43, 0x66, 0x8d,
	0x9a, 0x3c, 0x02, 0xc0, 0x27, 0x67, 0xba, 0xad, 0x81, 0x4a, 0x75, 0x8a, 0x92, 0x53, 0x14, 0x90,
	0x77, 0x61, 0xb7, 0x36, 0x35, 0x26, 0x53, 0x65, 0xb2, 0x53, 0x4b, 0xb5, 0x19, 0x01, 0x5f, 0xbe,
	0x2e, 0x78, 0x04, 0x2a, 0x53, 0x75, 0x26, 0x14, 0xfc, 0x34, 0xff, 0x75, 0x1d, 0x85, 0x0b, 0xef,
	0x30, 0x3c, 0xde, 0x55, 0x09, 0x28, 0x6b, 0x9d, 0x28, 0xea, 0xac, 0x99, 0xdc, 0xd3, 0x35, 0x9a,
	0x99, 0x10, 0xf0, 0x2b, 0xc1, 0xcb, 0x68, 0x67, 0xe1, 0xa1, 0x3f, 0x3c, 0xd3, 0xaf, 0x61, 0xbf,
	0x83, 0x50, 0x03, 0xbd, 0x0f, 0xc1, 0xbf, 0x4a, 0x85, 0x8c, 0x1c, 0x15, 0xe6, 0x40, 0x85, 0xe9,
	0xda, 0x55, 0x57, 0x32, 0x56, 0x36, 0xf4, 0x39, 0xec, 0xf5, 0x54, 0xe4, 0x9d, 0x8e, 0x83, 0x59,
	0xcf, 0x81, 0xd2, 0x36, 0x15, 0xba, 0x6d, 0x85, 0xf4, 0x1f, 0x17, 0xf6, 0xec, 0x65, 0xd0, 0x3b,
	0x53, 0x5b, 0x3a, 0x56, 0x2f, 0x0c, 0x7e, 0xdc, 0x06, 0x3f, 0x36, 0x3e, 0xbc, 0x2d, 0xf8, 0xf0,
	0x6d, 0x7c, 0x10, 0x33, 0xf5, 0x91, 0x41, 0x25, 0x8e, 0x79, 0x6e, 0x8d, 0x79, 0xac, 0xe4, 0xed,
	0x5c, 0x4f, 0xf4, 0x5c, 0xf5, 0x4e, 0x44, 0x13, 0x55, 0xdb, 0x7e, 0x03, 0x82, 0x76, 0x55, 0x62,
	0xcb, 0x8c, 0x3c, 0x69, 0xa7, 0x6d, 0x1e, 0x06, 0xdb, 0x1f, 0x5e, 0x33, 0x25, 0x6f, 0x42, 0xb0,
	0xba, 0x62, 0x42, 0x9c, 0xa5, 0x89, 0x02, 0x89, 0x17, 0x4f, 0xd4, 0x7d, 0x99, 0xa0, 0x2a, 0x63,
	0x72, 0x75, 0x81, 0x2a, 0x0d, 0x91, 0x89, 0xba, 0x2f, 0x13, 0xc4, 0x5f, 0xc1, 0x56, 0x97, 0xec,
	0x9c, 0xa3, 0x32, 0x54, 0xca, 0xa9, 0x91, 0x2c, 0x13, 0xca, 0xe0, 0x8d, 0x53, 0xac, 0xff, 0x59,
	0xba, 0xa9, 0xfb, 0x7b, 0x07, 0xae, 0xa9, 0xfb, 0xed, 0x0d, 0xf6, 0xdb, 0xef, 0xf4, 0x9b, 0x7e,
	0x0c, 0x3b, 0xdf, 0xe5, 0xc9, 0x0d, 0x01, 0x7a, 0xc3, 0xa3, 0x3f, 0xc0, 0xac, 0xcd, 0xca, 0xe0,
	0xd0, 0x0a, 0xe0, 0x74, 0x07, 0xaa, 0xfd, 0xb9, 0xb6, 0x3f, 0x5c, 0x75, 0xaf, 0x59, 0x75, 0x5a,
	0xc0, 0xb4, 0xd9, 0x8c, 0xa1, 0xfa, 0x64, 0xda, 0x72, 0x23, 0x9e, 0x71, 0x6f, 0x52, 0xf1, 0x14,
	0xf1, 0x80, 0x5e, 0x82, 0xd8, 0xdc, 0xc8, 0xfb, 0xe0, 0x23, 0xa7, 0xab, 0x12, 0xb7, 0x8c, 0x4d,
	0x19, 0xd0, 0xbf, 0x1c, 0x20, 0x3f, 0x17, 0x09, 0x93, 0x7a, 0xcf, 0xb7, 0x95, 0xde, 0x65, 0x07,
	0xf7, 0x76, 0x76, 0xf0, 0x86, 0xd8, 0x81, 0x9a, 0x0d, 0xf3, 0x87, 0x99, 0x40, 0xad, 0xe6, 0x53,
	0x98, 0xbd, 0x40, 0x48, 0xd8, 0x9b, 0x74, 0xeb, 0x20, 0x9a, 0xd9, 0x7b, 0xd6, 0x77, 0xe6, 0x4f,
	0x07, 0xc2, 0x1f, 0x35, 0x80, 0xee, 0xfc, 0xad, 0x99, 0x81, 0x97, 0xb1, 0x57, 0xf5, 0x48, 0x32,
	0xf6, 0x0a, 0x77, 0x2b, 0xa9, 0x4a, 0x26, 0xd3, 0x75, 0x6e, 0x16, 0xb1, 0xb9, 0xe3, 0x86, 0x16,
	0x65, 0xba, 0xe2, 0x86, 0x98, 0xf5, 0x85, 0x3c, 0x80, 0xb1, 0xb8, 0xac, 0x10, 0xc5, 0x63, 0xb3,
	0xb8, 0x97, 0xd5, 0x32, 0xa1, 0x4f, 0x60, 0xdf, 0xca, 0xa6, 0x81, 0xcb, 0x10, 0xeb, 0xd8, 0x76,
	0xba, 0x2b, 0x6f, 0xc3, 0x5e, 0x3b, 0xbe, 0x2d, 0x6d, 0xa1, 0x7f, 0x38, 0x40, 0x6c, 0x2b, 0x13,
	0xa1, 0xcb, 0x00, 0xce, 0xff, 0x65, 0x00, 0xf7, 0xce, 0x0c, 0x40, 0x1f, 0x41, 0x78, 0xc3, 0xf8,
	0x8e, 0xff, 0x1e, 0x69, 0xfd, 0x29, 0x2f, 0x37, 0xd8, 0xb0, 0x2f, 0x61, 0x72, 0x8e, 0x3c, 0x2b,
	0x24, 0x79, 0xd8, 0xa7, 0x6d, 0xe5, 0x63, 0x1e, 0x0d, 0xf0, 0xb9, 0x2e, 0xef, 0x73, 0x18, 0xaf,
	0x14, 0xf7, 0x12, 0xcd, 0xf9, 0x3d, 0x22, 0x9e, 0x3f, 0xec, 0xc9, 0xcd, 0xd3, 0x4f, 0x0c, 0xc3,
	0x92, 0xfb, 0x1a, 0x8a, 0x5d, 0x82, 0x99, 0x3f, 0xb8, 0x26, 0x35, 0xaf, 0x3e, 0x52, 0x6b, 0x4b,
	0x88, 0xd2, 0x76, 0x18, 0x63, 0x6e, 0x64, 0x59, 0x21, 0x5f, 0x37, 0xe6, 0x5f, 0x40, 0x58, 0xb5,
	0x0b, 0x66, 0x2a, 0xec, 0xaf, 0xdc, 0xe0, 0xdb, 0x13, 0x98, 0x70, 0x15, 0x80, 0x6f, 0x49, 0x71,
	0xe8, 0xd1, 0x63, 0x18, 0xfd, 0x8e, 0x1b, 0x44, 0x74, 0xfe, 0xd7, 0xb7, 0x69, 0x5b, 0x59, 0x8f,
	0x21, 0xe0, 0x79, 0xf2, 0xe2, 0xa6, 0x97, 0x43, 0xd1, 0x3e, 0x85, 0x89, 0x61, 0x69, 0xb2, 0x67,
	0xab, 0xed, 0xb1, 0x0d, 0xe1, 0xfe, 0x2b, 0x08, 0x25, 0x67, 0xd9, 0x59, 0xa6, 0xf1, 0x76, 0x70,
	0x0d, 0x57, 0xdd, 0xd9, 0x0d, 0xa0, 0xfa, 0x08, 0x02, 0xfc, 0x8d, 0x5d, 0xe2, 0xdf, 0x83, 0xde,
	0x1a, 0x3b, 0xd3, 0xde, 0xd7, 0x9b, 0x1c, 0xc3, 0xbd, 0x73, 0x2e, 0x55, 0x49, 0x77, 0x7d, 0xf3,
	0x72, 0xac, 0x7e, 0x89, 0x4f, 0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x86, 0x27, 0x87, 0x06, 0x31,
	0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LiveServiceClient is the client API for LiveService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LiveServiceClient interface {
	//检查通道连接
	GetList(ctx context.Context, in *GetLiveDataRequest, opts ...grpc.CallOption) (*GetLiveDataResponse, error)
	Create(ctx context.Context, in *CreateLiveRequest, opts ...grpc.CallOption) (*CreateLiveResponse, error)
	Start(ctx context.Context, in *StartLivRequest, opts ...grpc.CallOption) (*StartLivResponse, error)
	End(ctx context.Context, in *EndLivRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	UpdateScore(ctx context.Context, in *UpdateScoreRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	EndLive(ctx context.Context, in *StartLivRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	Watch(ctx context.Context, in *WatchLiveRequest, opts ...grpc.CallOption) (*StartLivResponse, error)
	EndWatch(ctx context.Context, in *WatchLiveRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	Package(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*PackageDataResponse, error)
	TeamMember(ctx context.Context, in *TeamMemberRequest, opts ...grpc.CallOption) (*TeamMemberResponse, error)
	LiveInfo(ctx context.Context, in *LiveRequest, opts ...grpc.CallOption) (*GetLiveData, error)
	GetWatchInfo(ctx context.Context, in *LiveRequest, opts ...grpc.CallOption) (*GetLiveData, error)
}

type liveServiceClient struct {
	cc *grpc.ClientConn
}

func NewLiveServiceClient(cc *grpc.ClientConn) LiveServiceClient {
	return &liveServiceClient{cc}
}

func (c *liveServiceClient) GetList(ctx context.Context, in *GetLiveDataRequest, opts ...grpc.CallOption) (*GetLiveDataResponse, error) {
	out := new(GetLiveDataResponse)
	err := c.cc.Invoke(ctx, "/app.LiveService/getList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveServiceClient) Create(ctx context.Context, in *CreateLiveRequest, opts ...grpc.CallOption) (*CreateLiveResponse, error) {
	out := new(CreateLiveResponse)
	err := c.cc.Invoke(ctx, "/app.LiveService/create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveServiceClient) Start(ctx context.Context, in *StartLivRequest, opts ...grpc.CallOption) (*StartLivResponse, error) {
	out := new(StartLivResponse)
	err := c.cc.Invoke(ctx, "/app.LiveService/start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveServiceClient) End(ctx context.Context, in *EndLivRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/app.LiveService/end", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveServiceClient) UpdateScore(ctx context.Context, in *UpdateScoreRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/app.LiveService/updateScore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveServiceClient) EndLive(ctx context.Context, in *StartLivRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/app.LiveService/endLive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveServiceClient) Watch(ctx context.Context, in *WatchLiveRequest, opts ...grpc.CallOption) (*StartLivResponse, error) {
	out := new(StartLivResponse)
	err := c.cc.Invoke(ctx, "/app.LiveService/watch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveServiceClient) EndWatch(ctx context.Context, in *WatchLiveRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/app.LiveService/endWatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveServiceClient) Package(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*PackageDataResponse, error) {
	out := new(PackageDataResponse)
	err := c.cc.Invoke(ctx, "/app.LiveService/package", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveServiceClient) TeamMember(ctx context.Context, in *TeamMemberRequest, opts ...grpc.CallOption) (*TeamMemberResponse, error) {
	out := new(TeamMemberResponse)
	err := c.cc.Invoke(ctx, "/app.LiveService/team_member", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveServiceClient) LiveInfo(ctx context.Context, in *LiveRequest, opts ...grpc.CallOption) (*GetLiveData, error) {
	out := new(GetLiveData)
	err := c.cc.Invoke(ctx, "/app.LiveService/liveInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveServiceClient) GetWatchInfo(ctx context.Context, in *LiveRequest, opts ...grpc.CallOption) (*GetLiveData, error) {
	out := new(GetLiveData)
	err := c.cc.Invoke(ctx, "/app.LiveService/getWatchInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LiveServiceServer is the server API for LiveService service.
type LiveServiceServer interface {
	//检查通道连接
	GetList(context.Context, *GetLiveDataRequest) (*GetLiveDataResponse, error)
	Create(context.Context, *CreateLiveRequest) (*CreateLiveResponse, error)
	Start(context.Context, *StartLivRequest) (*StartLivResponse, error)
	End(context.Context, *EndLivRequest) (*EmptyResponse, error)
	UpdateScore(context.Context, *UpdateScoreRequest) (*EmptyResponse, error)
	EndLive(context.Context, *StartLivRequest) (*EmptyResponse, error)
	Watch(context.Context, *WatchLiveRequest) (*StartLivResponse, error)
	EndWatch(context.Context, *WatchLiveRequest) (*EmptyResponse, error)
	Package(context.Context, *EmptyRequest) (*PackageDataResponse, error)
	TeamMember(context.Context, *TeamMemberRequest) (*TeamMemberResponse, error)
	LiveInfo(context.Context, *LiveRequest) (*GetLiveData, error)
	GetWatchInfo(context.Context, *LiveRequest) (*GetLiveData, error)
}

// UnimplementedLiveServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLiveServiceServer struct {
}

func (*UnimplementedLiveServiceServer) GetList(ctx context.Context, req *GetLiveDataRequest) (*GetLiveDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetList not implemented")
}
func (*UnimplementedLiveServiceServer) Create(ctx context.Context, req *CreateLiveRequest) (*CreateLiveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedLiveServiceServer) Start(ctx context.Context, req *StartLivRequest) (*StartLivResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}
func (*UnimplementedLiveServiceServer) End(ctx context.Context, req *EndLivRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method End not implemented")
}
func (*UnimplementedLiveServiceServer) UpdateScore(ctx context.Context, req *UpdateScoreRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateScore not implemented")
}
func (*UnimplementedLiveServiceServer) EndLive(ctx context.Context, req *StartLivRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EndLive not implemented")
}
func (*UnimplementedLiveServiceServer) Watch(ctx context.Context, req *WatchLiveRequest) (*StartLivResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Watch not implemented")
}
func (*UnimplementedLiveServiceServer) EndWatch(ctx context.Context, req *WatchLiveRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EndWatch not implemented")
}
func (*UnimplementedLiveServiceServer) Package(ctx context.Context, req *EmptyRequest) (*PackageDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Package not implemented")
}
func (*UnimplementedLiveServiceServer) TeamMember(ctx context.Context, req *TeamMemberRequest) (*TeamMemberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TeamMember not implemented")
}
func (*UnimplementedLiveServiceServer) LiveInfo(ctx context.Context, req *LiveRequest) (*GetLiveData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LiveInfo not implemented")
}
func (*UnimplementedLiveServiceServer) GetWatchInfo(ctx context.Context, req *LiveRequest) (*GetLiveData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWatchInfo not implemented")
}

func RegisterLiveServiceServer(s *grpc.Server, srv LiveServiceServer) {
	s.RegisterService(&_LiveService_serviceDesc, srv)
}

func _LiveService_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLiveDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServiceServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.LiveService/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServiceServer).GetList(ctx, req.(*GetLiveDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiveService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.LiveService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServiceServer).Create(ctx, req.(*CreateLiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiveService_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartLivRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServiceServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.LiveService/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServiceServer).Start(ctx, req.(*StartLivRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiveService_End_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndLivRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServiceServer).End(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.LiveService/End",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServiceServer).End(ctx, req.(*EndLivRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiveService_UpdateScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateScoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServiceServer).UpdateScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.LiveService/UpdateScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServiceServer).UpdateScore(ctx, req.(*UpdateScoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiveService_EndLive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartLivRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServiceServer).EndLive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.LiveService/EndLive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServiceServer).EndLive(ctx, req.(*StartLivRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiveService_Watch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchLiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServiceServer).Watch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.LiveService/Watch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServiceServer).Watch(ctx, req.(*WatchLiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiveService_EndWatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchLiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServiceServer).EndWatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.LiveService/EndWatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServiceServer).EndWatch(ctx, req.(*WatchLiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiveService_Package_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServiceServer).Package(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.LiveService/Package",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServiceServer).Package(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiveService_TeamMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeamMemberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServiceServer).TeamMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.LiveService/TeamMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServiceServer).TeamMember(ctx, req.(*TeamMemberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiveService_LiveInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServiceServer).LiveInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.LiveService/LiveInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServiceServer).LiveInfo(ctx, req.(*LiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiveService_GetWatchInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServiceServer).GetWatchInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.LiveService/GetWatchInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServiceServer).GetWatchInfo(ctx, req.(*LiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LiveService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.LiveService",
	HandlerType: (*LiveServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getList",
			Handler:    _LiveService_GetList_Handler,
		},
		{
			MethodName: "create",
			Handler:    _LiveService_Create_Handler,
		},
		{
			MethodName: "start",
			Handler:    _LiveService_Start_Handler,
		},
		{
			MethodName: "end",
			Handler:    _LiveService_End_Handler,
		},
		{
			MethodName: "updateScore",
			Handler:    _LiveService_UpdateScore_Handler,
		},
		{
			MethodName: "endLive",
			Handler:    _LiveService_EndLive_Handler,
		},
		{
			MethodName: "watch",
			Handler:    _LiveService_Watch_Handler,
		},
		{
			MethodName: "endWatch",
			Handler:    _LiveService_EndWatch_Handler,
		},
		{
			MethodName: "package",
			Handler:    _LiveService_Package_Handler,
		},
		{
			MethodName: "team_member",
			Handler:    _LiveService_TeamMember_Handler,
		},
		{
			MethodName: "liveInfo",
			Handler:    _LiveService_LiveInfo_Handler,
		},
		{
			MethodName: "getWatchInfo",
			Handler:    _LiveService_GetWatchInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "live.proto",
}
