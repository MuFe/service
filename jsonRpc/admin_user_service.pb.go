// Code generated by protoc-gen-go. DO NOT EDIT.
// source: admin_user_service.proto

package app

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AdminLoginRequest struct {
	Phone                string   `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Pass                 string   `protobuf:"bytes,2,opt,name=pass,proto3" json:"pass,omitempty"`
	BgID                 int64    `protobuf:"varint,3,opt,name=bgID,proto3" json:"bgID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdminLoginRequest) Reset()         { *m = AdminLoginRequest{} }
func (m *AdminLoginRequest) String() string { return proto.CompactTextString(m) }
func (*AdminLoginRequest) ProtoMessage()    {}
func (*AdminLoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd953a87ca2f057b, []int{0}
}

func (m *AdminLoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdminLoginRequest.Unmarshal(m, b)
}
func (m *AdminLoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdminLoginRequest.Marshal(b, m, deterministic)
}
func (m *AdminLoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdminLoginRequest.Merge(m, src)
}
func (m *AdminLoginRequest) XXX_Size() int {
	return xxx_messageInfo_AdminLoginRequest.Size(m)
}
func (m *AdminLoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AdminLoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AdminLoginRequest proto.InternalMessageInfo

func (m *AdminLoginRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AdminLoginRequest) GetPass() string {
	if m != nil {
		return m.Pass
	}
	return ""
}

func (m *AdminLoginRequest) GetBgID() int64 {
	if m != nil {
		return m.BgID
	}
	return 0
}

type AdminUserDataResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Head                 string   `protobuf:"bytes,2,opt,name=head,proto3" json:"head,omitempty"`
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Uid                  int64    `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	BusinessId           int64    `protobuf:"varint,5,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	No                   string   `protobuf:"bytes,6,opt,name=no,proto3" json:"no,omitempty"`
	UserGroupName        string   `protobuf:"bytes,7,opt,name=user_group_name,json=userGroupName,proto3" json:"user_group_name,omitempty"`
	UserGroupId          int64    `protobuf:"varint,8,opt,name=user_group_id,json=userGroupId,proto3" json:"user_group_id,omitempty"`
	WithdrawPass         string   `protobuf:"bytes,9,opt,name=withdraw_pass,json=withdrawPass,proto3" json:"withdraw_pass,omitempty"`
	BusinessName         string   `protobuf:"bytes,10,opt,name=business_name,json=businessName,proto3" json:"business_name,omitempty"`
	BusinessPhoto        string   `protobuf:"bytes,11,opt,name=business_photo,json=businessPhoto,proto3" json:"business_photo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdminUserDataResponse) Reset()         { *m = AdminUserDataResponse{} }
func (m *AdminUserDataResponse) String() string { return proto.CompactTextString(m) }
func (*AdminUserDataResponse) ProtoMessage()    {}
func (*AdminUserDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd953a87ca2f057b, []int{1}
}

func (m *AdminUserDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdminUserDataResponse.Unmarshal(m, b)
}
func (m *AdminUserDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdminUserDataResponse.Marshal(b, m, deterministic)
}
func (m *AdminUserDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdminUserDataResponse.Merge(m, src)
}
func (m *AdminUserDataResponse) XXX_Size() int {
	return xxx_messageInfo_AdminUserDataResponse.Size(m)
}
func (m *AdminUserDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AdminUserDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AdminUserDataResponse proto.InternalMessageInfo

func (m *AdminUserDataResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AdminUserDataResponse) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *AdminUserDataResponse) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AdminUserDataResponse) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *AdminUserDataResponse) GetBusinessId() int64 {
	if m != nil {
		return m.BusinessId
	}
	return 0
}

func (m *AdminUserDataResponse) GetNo() string {
	if m != nil {
		return m.No
	}
	return ""
}

func (m *AdminUserDataResponse) GetUserGroupName() string {
	if m != nil {
		return m.UserGroupName
	}
	return ""
}

func (m *AdminUserDataResponse) GetUserGroupId() int64 {
	if m != nil {
		return m.UserGroupId
	}
	return 0
}

func (m *AdminUserDataResponse) GetWithdrawPass() string {
	if m != nil {
		return m.WithdrawPass
	}
	return ""
}

func (m *AdminUserDataResponse) GetBusinessName() string {
	if m != nil {
		return m.BusinessName
	}
	return ""
}

func (m *AdminUserDataResponse) GetBusinessPhoto() string {
	if m != nil {
		return m.BusinessPhoto
	}
	return ""
}

type GetUserPagePermissionRequest struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	BusinessGroupId      int64    `protobuf:"varint,2,opt,name=business_group_id,json=businessGroupId,proto3" json:"business_group_id,omitempty"`
	BusinessId           int64    `protobuf:"varint,3,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserPagePermissionRequest) Reset()         { *m = GetUserPagePermissionRequest{} }
func (m *GetUserPagePermissionRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserPagePermissionRequest) ProtoMessage()    {}
func (*GetUserPagePermissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd953a87ca2f057b, []int{2}
}

func (m *GetUserPagePermissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserPagePermissionRequest.Unmarshal(m, b)
}
func (m *GetUserPagePermissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserPagePermissionRequest.Marshal(b, m, deterministic)
}
func (m *GetUserPagePermissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserPagePermissionRequest.Merge(m, src)
}
func (m *GetUserPagePermissionRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserPagePermissionRequest.Size(m)
}
func (m *GetUserPagePermissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserPagePermissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserPagePermissionRequest proto.InternalMessageInfo

func (m *GetUserPagePermissionRequest) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GetUserPagePermissionRequest) GetBusinessGroupId() int64 {
	if m != nil {
		return m.BusinessGroupId
	}
	return 0
}

func (m *GetUserPagePermissionRequest) GetBusinessId() int64 {
	if m != nil {
		return m.BusinessId
	}
	return 0
}

type PagePermissionResponse struct {
	PermissionName       []string `protobuf:"bytes,1,rep,name=permission_name,json=permissionName,proto3" json:"permission_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PagePermissionResponse) Reset()         { *m = PagePermissionResponse{} }
func (m *PagePermissionResponse) String() string { return proto.CompactTextString(m) }
func (*PagePermissionResponse) ProtoMessage()    {}
func (*PagePermissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd953a87ca2f057b, []int{3}
}

func (m *PagePermissionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PagePermissionResponse.Unmarshal(m, b)
}
func (m *PagePermissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PagePermissionResponse.Marshal(b, m, deterministic)
}
func (m *PagePermissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PagePermissionResponse.Merge(m, src)
}
func (m *PagePermissionResponse) XXX_Size() int {
	return xxx_messageInfo_PagePermissionResponse.Size(m)
}
func (m *PagePermissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PagePermissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PagePermissionResponse proto.InternalMessageInfo

func (m *PagePermissionResponse) GetPermissionName() []string {
	if m != nil {
		return m.PermissionName
	}
	return nil
}

type CheckUserGroupPermissionRequest struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	UserGroupID          int64    `protobuf:"varint,2,opt,name=userGroupID,proto3" json:"userGroupID,omitempty"`
	RoleName             string   `protobuf:"bytes,3,opt,name=roleName,proto3" json:"roleName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckUserGroupPermissionRequest) Reset()         { *m = CheckUserGroupPermissionRequest{} }
func (m *CheckUserGroupPermissionRequest) String() string { return proto.CompactTextString(m) }
func (*CheckUserGroupPermissionRequest) ProtoMessage()    {}
func (*CheckUserGroupPermissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd953a87ca2f057b, []int{4}
}

func (m *CheckUserGroupPermissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUserGroupPermissionRequest.Unmarshal(m, b)
}
func (m *CheckUserGroupPermissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUserGroupPermissionRequest.Marshal(b, m, deterministic)
}
func (m *CheckUserGroupPermissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUserGroupPermissionRequest.Merge(m, src)
}
func (m *CheckUserGroupPermissionRequest) XXX_Size() int {
	return xxx_messageInfo_CheckUserGroupPermissionRequest.Size(m)
}
func (m *CheckUserGroupPermissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUserGroupPermissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUserGroupPermissionRequest proto.InternalMessageInfo

func (m *CheckUserGroupPermissionRequest) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *CheckUserGroupPermissionRequest) GetUserGroupID() int64 {
	if m != nil {
		return m.UserGroupID
	}
	return 0
}

func (m *CheckUserGroupPermissionRequest) GetRoleName() string {
	if m != nil {
		return m.RoleName
	}
	return ""
}

type CheckGroupPermissionRequest struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	UserGroupID          int64    `protobuf:"varint,2,opt,name=userGroupID,proto3" json:"userGroupID,omitempty"`
	RoleName             string   `protobuf:"bytes,3,opt,name=roleName,proto3" json:"roleName,omitempty"`
	BusinessId           int64    `protobuf:"varint,4,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckGroupPermissionRequest) Reset()         { *m = CheckGroupPermissionRequest{} }
func (m *CheckGroupPermissionRequest) String() string { return proto.CompactTextString(m) }
func (*CheckGroupPermissionRequest) ProtoMessage()    {}
func (*CheckGroupPermissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd953a87ca2f057b, []int{5}
}

func (m *CheckGroupPermissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckGroupPermissionRequest.Unmarshal(m, b)
}
func (m *CheckGroupPermissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckGroupPermissionRequest.Marshal(b, m, deterministic)
}
func (m *CheckGroupPermissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckGroupPermissionRequest.Merge(m, src)
}
func (m *CheckGroupPermissionRequest) XXX_Size() int {
	return xxx_messageInfo_CheckGroupPermissionRequest.Size(m)
}
func (m *CheckGroupPermissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckGroupPermissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckGroupPermissionRequest proto.InternalMessageInfo

func (m *CheckGroupPermissionRequest) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *CheckGroupPermissionRequest) GetUserGroupID() int64 {
	if m != nil {
		return m.UserGroupID
	}
	return 0
}

func (m *CheckGroupPermissionRequest) GetRoleName() string {
	if m != nil {
		return m.RoleName
	}
	return ""
}

func (m *CheckGroupPermissionRequest) GetBusinessId() int64 {
	if m != nil {
		return m.BusinessId
	}
	return 0
}

type GetPermissionGroupRequest struct {
	BusinessGroupId      int64    `protobuf:"varint,1,opt,name=business_group_id,json=businessGroupId,proto3" json:"business_group_id,omitempty"`
	BusinessId           int64    `protobuf:"varint,2,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPermissionGroupRequest) Reset()         { *m = GetPermissionGroupRequest{} }
func (m *GetPermissionGroupRequest) String() string { return proto.CompactTextString(m) }
func (*GetPermissionGroupRequest) ProtoMessage()    {}
func (*GetPermissionGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd953a87ca2f057b, []int{6}
}

func (m *GetPermissionGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPermissionGroupRequest.Unmarshal(m, b)
}
func (m *GetPermissionGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPermissionGroupRequest.Marshal(b, m, deterministic)
}
func (m *GetPermissionGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPermissionGroupRequest.Merge(m, src)
}
func (m *GetPermissionGroupRequest) XXX_Size() int {
	return xxx_messageInfo_GetPermissionGroupRequest.Size(m)
}
func (m *GetPermissionGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPermissionGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPermissionGroupRequest proto.InternalMessageInfo

func (m *GetPermissionGroupRequest) GetBusinessGroupId() int64 {
	if m != nil {
		return m.BusinessGroupId
	}
	return 0
}

func (m *GetPermissionGroupRequest) GetBusinessId() int64 {
	if m != nil {
		return m.BusinessId
	}
	return 0
}

type GetPermissionGroupResponse struct {
	List                 []*GetPermissionGroup `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetPermissionGroupResponse) Reset()         { *m = GetPermissionGroupResponse{} }
func (m *GetPermissionGroupResponse) String() string { return proto.CompactTextString(m) }
func (*GetPermissionGroupResponse) ProtoMessage()    {}
func (*GetPermissionGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd953a87ca2f057b, []int{7}
}

func (m *GetPermissionGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPermissionGroupResponse.Unmarshal(m, b)
}
func (m *GetPermissionGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPermissionGroupResponse.Marshal(b, m, deterministic)
}
func (m *GetPermissionGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPermissionGroupResponse.Merge(m, src)
}
func (m *GetPermissionGroupResponse) XXX_Size() int {
	return xxx_messageInfo_GetPermissionGroupResponse.Size(m)
}
func (m *GetPermissionGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPermissionGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPermissionGroupResponse proto.InternalMessageInfo

func (m *GetPermissionGroupResponse) GetList() []*GetPermissionGroup {
	if m != nil {
		return m.List
	}
	return nil
}

type GetPermissionGroup struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	User                 []*GetPermissionUser `protobuf:"bytes,3,rep,name=user,proto3" json:"user,omitempty"`
	Role                 []*GetPermission     `protobuf:"bytes,4,rep,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetPermissionGroup) Reset()         { *m = GetPermissionGroup{} }
func (m *GetPermissionGroup) String() string { return proto.CompactTextString(m) }
func (*GetPermissionGroup) ProtoMessage()    {}
func (*GetPermissionGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd953a87ca2f057b, []int{8}
}

func (m *GetPermissionGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPermissionGroup.Unmarshal(m, b)
}
func (m *GetPermissionGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPermissionGroup.Marshal(b, m, deterministic)
}
func (m *GetPermissionGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPermissionGroup.Merge(m, src)
}
func (m *GetPermissionGroup) XXX_Size() int {
	return xxx_messageInfo_GetPermissionGroup.Size(m)
}
func (m *GetPermissionGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPermissionGroup.DiscardUnknown(m)
}

var xxx_messageInfo_GetPermissionGroup proto.InternalMessageInfo

func (m *GetPermissionGroup) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetPermissionGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetPermissionGroup) GetUser() []*GetPermissionUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *GetPermissionGroup) GetRole() []*GetPermission {
	if m != nil {
		return m.Role
	}
	return nil
}

type GetPermissionUser struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPermissionUser) Reset()         { *m = GetPermissionUser{} }
func (m *GetPermissionUser) String() string { return proto.CompactTextString(m) }
func (*GetPermissionUser) ProtoMessage()    {}
func (*GetPermissionUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd953a87ca2f057b, []int{9}
}

func (m *GetPermissionUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPermissionUser.Unmarshal(m, b)
}
func (m *GetPermissionUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPermissionUser.Marshal(b, m, deterministic)
}
func (m *GetPermissionUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPermissionUser.Merge(m, src)
}
func (m *GetPermissionUser) XXX_Size() int {
	return xxx_messageInfo_GetPermissionUser.Size(m)
}
func (m *GetPermissionUser) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPermissionUser.DiscardUnknown(m)
}

var xxx_messageInfo_GetPermissionUser proto.InternalMessageInfo

func (m *GetPermissionUser) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GetPermissionUser) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetPermissionUser) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type GetPermission struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status               int64    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPermission) Reset()         { *m = GetPermission{} }
func (m *GetPermission) String() string { return proto.CompactTextString(m) }
func (*GetPermission) ProtoMessage()    {}
func (*GetPermission) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd953a87ca2f057b, []int{10}
}

func (m *GetPermission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPermission.Unmarshal(m, b)
}
func (m *GetPermission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPermission.Marshal(b, m, deterministic)
}
func (m *GetPermission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPermission.Merge(m, src)
}
func (m *GetPermission) XXX_Size() int {
	return xxx_messageInfo_GetPermission.Size(m)
}
func (m *GetPermission) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPermission.DiscardUnknown(m)
}

var xxx_messageInfo_GetPermission proto.InternalMessageInfo

func (m *GetPermission) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetPermission) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetPermission) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

type DeleteUserPermissionRequest struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	GroupId              int64    `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	BusinessId           int64    `protobuf:"varint,3,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteUserPermissionRequest) Reset()         { *m = DeleteUserPermissionRequest{} }
func (m *DeleteUserPermissionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteUserPermissionRequest) ProtoMessage()    {}
func (*DeleteUserPermissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd953a87ca2f057b, []int{11}
}

func (m *DeleteUserPermissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteUserPermissionRequest.Unmarshal(m, b)
}
func (m *DeleteUserPermissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteUserPermissionRequest.Marshal(b, m, deterministic)
}
func (m *DeleteUserPermissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteUserPermissionRequest.Merge(m, src)
}
func (m *DeleteUserPermissionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteUserPermissionRequest.Size(m)
}
func (m *DeleteUserPermissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteUserPermissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteUserPermissionRequest proto.InternalMessageInfo

func (m *DeleteUserPermissionRequest) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *DeleteUserPermissionRequest) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *DeleteUserPermissionRequest) GetBusinessId() int64 {
	if m != nil {
		return m.BusinessId
	}
	return 0
}

type GetBrandGoodCategoryRequest struct {
	BusinessId           int64    `protobuf:"varint,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBrandGoodCategoryRequest) Reset()         { *m = GetBrandGoodCategoryRequest{} }
func (m *GetBrandGoodCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetBrandGoodCategoryRequest) ProtoMessage()    {}
func (*GetBrandGoodCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd953a87ca2f057b, []int{12}
}

func (m *GetBrandGoodCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBrandGoodCategoryRequest.Unmarshal(m, b)
}
func (m *GetBrandGoodCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBrandGoodCategoryRequest.Marshal(b, m, deterministic)
}
func (m *GetBrandGoodCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBrandGoodCategoryRequest.Merge(m, src)
}
func (m *GetBrandGoodCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_GetBrandGoodCategoryRequest.Size(m)
}
func (m *GetBrandGoodCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBrandGoodCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBrandGoodCategoryRequest proto.InternalMessageInfo

func (m *GetBrandGoodCategoryRequest) GetBusinessId() int64 {
	if m != nil {
		return m.BusinessId
	}
	return 0
}

type GetBrandGoodCategoryResponse struct {
	List                 []int64  `protobuf:"varint,1,rep,packed,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBrandGoodCategoryResponse) Reset()         { *m = GetBrandGoodCategoryResponse{} }
func (m *GetBrandGoodCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*GetBrandGoodCategoryResponse) ProtoMessage()    {}
func (*GetBrandGoodCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd953a87ca2f057b, []int{13}
}

func (m *GetBrandGoodCategoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBrandGoodCategoryResponse.Unmarshal(m, b)
}
func (m *GetBrandGoodCategoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBrandGoodCategoryResponse.Marshal(b, m, deterministic)
}
func (m *GetBrandGoodCategoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBrandGoodCategoryResponse.Merge(m, src)
}
func (m *GetBrandGoodCategoryResponse) XXX_Size() int {
	return xxx_messageInfo_GetBrandGoodCategoryResponse.Size(m)
}
func (m *GetBrandGoodCategoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBrandGoodCategoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBrandGoodCategoryResponse proto.InternalMessageInfo

func (m *GetBrandGoodCategoryResponse) GetList() []int64 {
	if m != nil {
		return m.List
	}
	return nil
}

type GetCommitmentResponse struct {
	List                 []*Commitment `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetCommitmentResponse) Reset()         { *m = GetCommitmentResponse{} }
func (m *GetCommitmentResponse) String() string { return proto.CompactTextString(m) }
func (*GetCommitmentResponse) ProtoMessage()    {}
func (*GetCommitmentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd953a87ca2f057b, []int{14}
}

func (m *GetCommitmentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommitmentResponse.Unmarshal(m, b)
}
func (m *GetCommitmentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommitmentResponse.Marshal(b, m, deterministic)
}
func (m *GetCommitmentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommitmentResponse.Merge(m, src)
}
func (m *GetCommitmentResponse) XXX_Size() int {
	return xxx_messageInfo_GetCommitmentResponse.Size(m)
}
func (m *GetCommitmentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommitmentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommitmentResponse proto.InternalMessageInfo

func (m *GetCommitmentResponse) GetList() []*Commitment {
	if m != nil {
		return m.List
	}
	return nil
}

type Commitment struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status               int64    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Commitment) Reset()         { *m = Commitment{} }
func (m *Commitment) String() string { return proto.CompactTextString(m) }
func (*Commitment) ProtoMessage()    {}
func (*Commitment) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd953a87ca2f057b, []int{15}
}

func (m *Commitment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commitment.Unmarshal(m, b)
}
func (m *Commitment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commitment.Marshal(b, m, deterministic)
}
func (m *Commitment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commitment.Merge(m, src)
}
func (m *Commitment) XXX_Size() int {
	return xxx_messageInfo_Commitment.Size(m)
}
func (m *Commitment) XXX_DiscardUnknown() {
	xxx_messageInfo_Commitment.DiscardUnknown(m)
}

var xxx_messageInfo_Commitment proto.InternalMessageInfo

func (m *Commitment) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Commitment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Commitment) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func init() {
	proto.RegisterType((*AdminLoginRequest)(nil), "app.AdminLoginRequest")
	proto.RegisterType((*AdminUserDataResponse)(nil), "app.AdminUserDataResponse")
	proto.RegisterType((*GetUserPagePermissionRequest)(nil), "app.getUserPagePermissionRequest")
	proto.RegisterType((*PagePermissionResponse)(nil), "app.PagePermissionResponse")
	proto.RegisterType((*CheckUserGroupPermissionRequest)(nil), "app.checkUserGroupPermissionRequest")
	proto.RegisterType((*CheckGroupPermissionRequest)(nil), "app.checkGroupPermissionRequest")
	proto.RegisterType((*GetPermissionGroupRequest)(nil), "app.getPermissionGroupRequest")
	proto.RegisterType((*GetPermissionGroupResponse)(nil), "app.getPermissionGroupResponse")
	proto.RegisterType((*GetPermissionGroup)(nil), "app.getPermissionGroup")
	proto.RegisterType((*GetPermissionUser)(nil), "app.getPermissionUser")
	proto.RegisterType((*GetPermission)(nil), "app.getPermission")
	proto.RegisterType((*DeleteUserPermissionRequest)(nil), "app.deleteUserPermissionRequest")
	proto.RegisterType((*GetBrandGoodCategoryRequest)(nil), "app.getBrandGoodCategoryRequest")
	proto.RegisterType((*GetBrandGoodCategoryResponse)(nil), "app.getBrandGoodCategoryResponse")
	proto.RegisterType((*GetCommitmentResponse)(nil), "app.getCommitmentResponse")
	proto.RegisterType((*Commitment)(nil), "app.Commitment")
}

func init() { proto.RegisterFile("admin_user_service.proto", fileDescriptor_fd953a87ca2f057b) }

var fileDescriptor_fd953a87ca2f057b = []byte{
	// 816 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xdd, 0x6e, 0xd3, 0x4a,
	0x10, 0x96, 0xed, 0xf4, 0x6f, 0x72, 0x92, 0x34, 0x7b, 0xda, 0x1c, 0xd7, 0x39, 0xa2, 0xc1, 0x85,
	0x52, 0x15, 0xa9, 0x17, 0xe1, 0x12, 0x04, 0x2a, 0x2d, 0x2a, 0x51, 0x2b, 0x08, 0x81, 0x8a, 0x0b,
	0x2e, 0x2c, 0x27, 0x5e, 0x39, 0x56, 0x13, 0xaf, 0xeb, 0xdd, 0x50, 0xf5, 0x82, 0x37, 0x40, 0x3c,
	0x0b, 0xb7, 0x3c, 0x08, 0xef, 0x83, 0x76, 0xe2, 0xbf, 0xc6, 0x4e, 0x09, 0x20, 0x71, 0xb7, 0xfe,
	0x76, 0xf6, 0x9b, 0xd9, 0x6f, 0x66, 0x67, 0x0c, 0xba, 0xed, 0x8c, 0x3d, 0xdf, 0x9a, 0x70, 0x1a,
	0x5a, 0x9c, 0x86, 0x1f, 0xbd, 0x01, 0x3d, 0x08, 0x42, 0x26, 0x18, 0xd1, 0xec, 0x20, 0x30, 0xc0,
	0xb1, 0x85, 0x3d, 0x05, 0xcc, 0x37, 0x50, 0x3f, 0x94, 0xc6, 0x67, 0xcc, 0xf5, 0xfc, 0x1e, 0xbd,
	0x9c, 0x50, 0x2e, 0xc8, 0x06, 0x2c, 0x05, 0x43, 0xe6, 0x53, 0x5d, 0x69, 0x29, 0x7b, 0x6b, 0xbd,
	0xe9, 0x07, 0x21, 0x50, 0x0a, 0x6c, 0xce, 0x75, 0x15, 0x41, 0x5c, 0x4b, 0xac, 0xef, 0x76, 0x8e,
	0x75, 0xad, 0xa5, 0xec, 0x69, 0x3d, 0x5c, 0x9b, 0xdf, 0x55, 0xd8, 0x44, 0xce, 0x73, 0x4e, 0xc3,
	0x63, 0x5b, 0xd8, 0x3d, 0xca, 0x03, 0xe6, 0x73, 0x64, 0xf0, 0xed, 0x71, 0x4c, 0x8b, 0x6b, 0x89,
	0x0d, 0xa9, 0xed, 0xc4, 0xac, 0x72, 0x9d, 0xfa, 0xd7, 0xb2, 0xfe, 0xd7, 0x41, 0x9b, 0x78, 0x8e,
	0x5e, 0x42, 0x57, 0x72, 0x49, 0xb6, 0xa1, 0xdc, 0x9f, 0x70, 0xcf, 0xa7, 0x9c, 0x5b, 0x9e, 0xa3,
	0x2f, 0xe1, 0x0e, 0xc4, 0x50, 0xc7, 0x21, 0x55, 0x50, 0x7d, 0xa6, 0x2f, 0x23, 0x8b, 0xea, 0x33,
	0xb2, 0x0b, 0x35, 0x14, 0xc5, 0x0d, 0xd9, 0x24, 0xb0, 0x30, 0x96, 0x15, 0xdc, 0xac, 0x48, 0xf8,
	0x44, 0xa2, 0xaf, 0x64, 0x50, 0x26, 0x54, 0x32, 0x76, 0x9e, 0xa3, 0xaf, 0x22, 0x75, 0x39, 0xb1,
	0xea, 0x38, 0x64, 0x07, 0x2a, 0x57, 0x9e, 0x18, 0x3a, 0xa1, 0x7d, 0x65, 0xa1, 0x2e, 0x6b, 0xc8,
	0xf4, 0x4f, 0x0c, 0x76, 0xa5, 0x3e, 0x3b, 0x50, 0x49, 0x22, 0x44, 0x77, 0x30, 0x35, 0x8a, 0x41,
	0xf4, 0x76, 0x1f, 0xaa, 0x89, 0x51, 0x30, 0x64, 0x82, 0xe9, 0xe5, 0x69, 0x50, 0x31, 0xda, 0x95,
	0xa0, 0xf9, 0x09, 0xfe, 0x77, 0xa9, 0x90, 0xa2, 0x76, 0x6d, 0x97, 0x76, 0x69, 0x38, 0xf6, 0x38,
	0xf7, 0x58, 0x92, 0xb5, 0x48, 0x1f, 0x25, 0xd5, 0x67, 0x1f, 0xea, 0x09, 0x71, 0x72, 0x15, 0x15,
	0xf7, 0x6b, 0xf1, 0x46, 0x7c, 0x9d, 0x19, 0x2d, 0xb5, 0x59, 0x2d, 0xcd, 0x43, 0x68, 0xcc, 0xfa,
	0x8d, 0xd2, 0xfa, 0x00, 0x6a, 0x41, 0x82, 0x5a, 0x51, 0x86, 0xb5, 0xbd, 0xb5, 0x5e, 0x35, 0x85,
	0xe5, 0x45, 0xcd, 0x4b, 0xd8, 0x1e, 0x0c, 0xe9, 0xe0, 0xe2, 0x3c, 0x96, 0x71, 0x91, 0x4b, 0xb4,
	0x20, 0x23, 0xfb, 0x71, 0x14, 0x7e, 0x16, 0x22, 0x06, 0xac, 0x86, 0x6c, 0x44, 0xa5, 0x8b, 0xa8,
	0x62, 0x92, 0x6f, 0xf3, 0x8b, 0x02, 0x4d, 0xf4, 0xf9, 0x77, 0xfc, 0xcd, 0xca, 0x58, 0xca, 0xc9,
	0x38, 0x84, 0x2d, 0x97, 0x8a, 0x34, 0x10, 0x24, 0x8d, 0xa3, 0x29, 0x4c, 0x98, 0xb2, 0x50, 0xc2,
	0xd4, 0x9c, 0xa7, 0x0e, 0x18, 0x45, 0x9e, 0xa2, 0xa4, 0x3d, 0x84, 0xd2, 0xc8, 0xe3, 0x02, 0x33,
	0x55, 0x6e, 0xff, 0x77, 0x60, 0x07, 0xc1, 0x41, 0x81, 0x39, 0x1a, 0x99, 0x9f, 0x15, 0x20, 0xf9,
	0x4d, 0xf9, 0xbc, 0x92, 0xf8, 0x54, 0xcf, 0x49, 0xde, 0xb7, 0x9a, 0x79, 0xdf, 0xfb, 0x50, 0x92,
	0xda, 0xe9, 0x1a, 0xfa, 0x69, 0xe4, 0xfd, 0xc8, 0x62, 0xe8, 0xa1, 0x0d, 0xd9, 0x85, 0x92, 0x14,
	0x52, 0x2f, 0xa1, 0x2d, 0xc9, 0xdb, 0xf6, 0x70, 0xdf, 0x7c, 0x0d, 0xf5, 0x1c, 0x45, 0x41, 0x26,
	0x8b, 0xc2, 0x29, 0x6c, 0x2d, 0xe6, 0x29, 0x54, 0x6e, 0x10, 0x2e, 0x74, 0xb3, 0x06, 0x2c, 0x73,
	0x61, 0x8b, 0x09, 0x8f, 0x1e, 0x4b, 0xf4, 0x65, 0x5e, 0x40, 0xd3, 0xa1, 0x23, 0x2a, 0x28, 0x3e,
	0xd5, 0x05, 0x2a, 0x6e, 0x0b, 0x56, 0x67, 0x5e, 0xe7, 0x8a, 0xbb, 0xe8, 0xab, 0x7c, 0x0a, 0x4d,
	0x97, 0x8a, 0xe7, 0xa1, 0xed, 0x3b, 0x27, 0x8c, 0x39, 0x47, 0xb6, 0xa0, 0x2e, 0x0b, 0xaf, 0x63,
	0x67, 0x33, 0xe7, 0x95, 0xdc, 0xf9, 0x36, 0x36, 0x95, 0x82, 0xf3, 0x69, 0xcb, 0x4e, 0xca, 0x44,
	0x8b, 0xaa, 0xe1, 0x09, 0x6c, 0xba, 0x54, 0x1c, 0xb1, 0xf1, 0xd8, 0x13, 0x63, 0xea, 0x8b, 0xc4,
	0x78, 0xe7, 0x46, 0x4d, 0xd5, 0x30, 0x7f, 0x19, 0xb3, 0xe9, 0xe9, 0x97, 0x00, 0x29, 0xf6, 0x27,
	0x42, 0xb7, 0xbf, 0xaa, 0xb0, 0x9e, 0x0c, 0x9a, 0xb7, 0xd3, 0x39, 0x47, 0x1e, 0xc3, 0xd2, 0x48,
	0xce, 0x32, 0x32, 0x2d, 0xb5, 0xdc, 0x70, 0x33, 0x8c, 0x14, 0xcf, 0x0d, 0xa8, 0x43, 0x28, 0xf7,
	0xa5, 0x14, 0xd6, 0xef, 0x53, 0x7c, 0x80, 0x8d, 0x22, 0x41, 0x49, 0x2b, 0xae, 0xe6, 0x79, 0xb9,
	0x32, 0xee, 0xde, 0x62, 0x11, 0x91, 0x3f, 0x83, 0xaa, 0x4b, 0x85, 0x35, 0x48, 0xf5, 0xab, 0xe3,
	0xa1, 0x17, 0xe3, 0x40, 0x5c, 0xdf, 0x8c, 0xae, 0x30, 0x43, 0xed, 0x6f, 0x1a, 0x34, 0x30, 0xee,
	0xb4, 0x2e, 0x63, 0xe1, 0xde, 0x81, 0x3e, 0xaf, 0x39, 0x93, 0x7b, 0x48, 0xf9, 0x93, 0xde, 0x6d,
	0x90, 0x6c, 0x2c, 0x51, 0xc4, 0xa7, 0xf0, 0x6f, 0x72, 0x2c, 0x43, 0xd8, 0x4a, 0x09, 0x7f, 0x81,
	0xec, 0x3d, 0x16, 0x5e, 0x7e, 0x02, 0x92, 0x44, 0xba, 0xb9, 0xd3, 0xd1, 0x68, 0xa2, 0xc9, 0x9c,
	0x09, 0x76, 0x5e, 0xd8, 0xde, 0xee, 0xcc, 0x6b, 0x8a, 0x11, 0xe5, 0xf6, 0xdc, 0xfd, 0x88, 0xf6,
	0x0c, 0x36, 0x8a, 0x3a, 0x41, 0x74, 0xfb, 0x5b, 0x9a, 0x44, 0xd1, 0xed, 0xfb, 0xcb, 0xf8, 0xc7,
	0xf6, 0xe8, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0x92, 0x05, 0x5e, 0x6e, 0xde, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdminUserServiceClient is the client API for AdminUserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminUserServiceClient interface {
	//检查通道连接
	Login(ctx context.Context, in *AdminLoginRequest, opts ...grpc.CallOption) (*AdminUserDataResponse, error)
	BrandLogin(ctx context.Context, in *AdminLoginRequest, opts ...grpc.CallOption) (*AdminUserDataResponse, error)
	GetBrandGoodCategory(ctx context.Context, in *GetBrandGoodCategoryRequest, opts ...grpc.CallOption) (*GetBrandGoodCategoryResponse, error)
	GetCommitment(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetCommitmentResponse, error)
}

type adminUserServiceClient struct {
	cc *grpc.ClientConn
}

func NewAdminUserServiceClient(cc *grpc.ClientConn) AdminUserServiceClient {
	return &adminUserServiceClient{cc}
}

func (c *adminUserServiceClient) Login(ctx context.Context, in *AdminLoginRequest, opts ...grpc.CallOption) (*AdminUserDataResponse, error) {
	out := new(AdminUserDataResponse)
	err := c.cc.Invoke(ctx, "/app.AdminUserService/login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminUserServiceClient) BrandLogin(ctx context.Context, in *AdminLoginRequest, opts ...grpc.CallOption) (*AdminUserDataResponse, error) {
	out := new(AdminUserDataResponse)
	err := c.cc.Invoke(ctx, "/app.AdminUserService/brand_login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminUserServiceClient) GetBrandGoodCategory(ctx context.Context, in *GetBrandGoodCategoryRequest, opts ...grpc.CallOption) (*GetBrandGoodCategoryResponse, error) {
	out := new(GetBrandGoodCategoryResponse)
	err := c.cc.Invoke(ctx, "/app.AdminUserService/getBrandGoodCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminUserServiceClient) GetCommitment(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetCommitmentResponse, error) {
	out := new(GetCommitmentResponse)
	err := c.cc.Invoke(ctx, "/app.AdminUserService/get_commitment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminUserServiceServer is the server API for AdminUserService service.
type AdminUserServiceServer interface {
	//检查通道连接
	Login(context.Context, *AdminLoginRequest) (*AdminUserDataResponse, error)
	BrandLogin(context.Context, *AdminLoginRequest) (*AdminUserDataResponse, error)
	GetBrandGoodCategory(context.Context, *GetBrandGoodCategoryRequest) (*GetBrandGoodCategoryResponse, error)
	GetCommitment(context.Context, *EmptyRequest) (*GetCommitmentResponse, error)
}

// UnimplementedAdminUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAdminUserServiceServer struct {
}

func (*UnimplementedAdminUserServiceServer) Login(ctx context.Context, req *AdminLoginRequest) (*AdminUserDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedAdminUserServiceServer) BrandLogin(ctx context.Context, req *AdminLoginRequest) (*AdminUserDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BrandLogin not implemented")
}
func (*UnimplementedAdminUserServiceServer) GetBrandGoodCategory(ctx context.Context, req *GetBrandGoodCategoryRequest) (*GetBrandGoodCategoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBrandGoodCategory not implemented")
}
func (*UnimplementedAdminUserServiceServer) GetCommitment(ctx context.Context, req *EmptyRequest) (*GetCommitmentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommitment not implemented")
}

func RegisterAdminUserServiceServer(s *grpc.Server, srv AdminUserServiceServer) {
	s.RegisterService(&_AdminUserService_serviceDesc, srv)
}

func _AdminUserService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminUserServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.AdminUserService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminUserServiceServer).Login(ctx, req.(*AdminLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminUserService_BrandLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminUserServiceServer).BrandLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.AdminUserService/BrandLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminUserServiceServer).BrandLogin(ctx, req.(*AdminLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminUserService_GetBrandGoodCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBrandGoodCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminUserServiceServer).GetBrandGoodCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.AdminUserService/GetBrandGoodCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminUserServiceServer).GetBrandGoodCategory(ctx, req.(*GetBrandGoodCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminUserService_GetCommitment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminUserServiceServer).GetCommitment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.AdminUserService/GetCommitment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminUserServiceServer).GetCommitment(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdminUserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.AdminUserService",
	HandlerType: (*AdminUserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "login",
			Handler:    _AdminUserService_Login_Handler,
		},
		{
			MethodName: "brand_login",
			Handler:    _AdminUserService_BrandLogin_Handler,
		},
		{
			MethodName: "getBrandGoodCategory",
			Handler:    _AdminUserService_GetBrandGoodCategory_Handler,
		},
		{
			MethodName: "get_commitment",
			Handler:    _AdminUserService_GetCommitment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "admin_user_service.proto",
}

// AdminPermissionServiceClient is the client API for AdminPermissionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminPermissionServiceClient interface {
	CheckUserGroupPermission(ctx context.Context, in *CheckUserGroupPermissionRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	CheckUserPermission(ctx context.Context, in *CheckGroupPermissionRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	GetUserPagePermission(ctx context.Context, in *GetUserPagePermissionRequest, opts ...grpc.CallOption) (*PagePermissionResponse, error)
	GetPermissionGroup(ctx context.Context, in *GetPermissionGroupRequest, opts ...grpc.CallOption) (*GetPermissionGroupResponse, error)
	DeleteUserPermission(ctx context.Context, in *DeleteUserPermissionRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type adminPermissionServiceClient struct {
	cc *grpc.ClientConn
}

func NewAdminPermissionServiceClient(cc *grpc.ClientConn) AdminPermissionServiceClient {
	return &adminPermissionServiceClient{cc}
}

func (c *adminPermissionServiceClient) CheckUserGroupPermission(ctx context.Context, in *CheckUserGroupPermissionRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/app.AdminPermissionService/checkUserGroupPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminPermissionServiceClient) CheckUserPermission(ctx context.Context, in *CheckGroupPermissionRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/app.AdminPermissionService/checkUserPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminPermissionServiceClient) GetUserPagePermission(ctx context.Context, in *GetUserPagePermissionRequest, opts ...grpc.CallOption) (*PagePermissionResponse, error) {
	out := new(PagePermissionResponse)
	err := c.cc.Invoke(ctx, "/app.AdminPermissionService/getUserPagePermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminPermissionServiceClient) GetPermissionGroup(ctx context.Context, in *GetPermissionGroupRequest, opts ...grpc.CallOption) (*GetPermissionGroupResponse, error) {
	out := new(GetPermissionGroupResponse)
	err := c.cc.Invoke(ctx, "/app.AdminPermissionService/getPermissionGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminPermissionServiceClient) DeleteUserPermission(ctx context.Context, in *DeleteUserPermissionRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/app.AdminPermissionService/deleteUserPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminPermissionServiceServer is the server API for AdminPermissionService service.
type AdminPermissionServiceServer interface {
	CheckUserGroupPermission(context.Context, *CheckUserGroupPermissionRequest) (*EmptyResponse, error)
	CheckUserPermission(context.Context, *CheckGroupPermissionRequest) (*EmptyResponse, error)
	GetUserPagePermission(context.Context, *GetUserPagePermissionRequest) (*PagePermissionResponse, error)
	GetPermissionGroup(context.Context, *GetPermissionGroupRequest) (*GetPermissionGroupResponse, error)
	DeleteUserPermission(context.Context, *DeleteUserPermissionRequest) (*EmptyResponse, error)
}

// UnimplementedAdminPermissionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAdminPermissionServiceServer struct {
}

func (*UnimplementedAdminPermissionServiceServer) CheckUserGroupPermission(ctx context.Context, req *CheckUserGroupPermissionRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUserGroupPermission not implemented")
}
func (*UnimplementedAdminPermissionServiceServer) CheckUserPermission(ctx context.Context, req *CheckGroupPermissionRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUserPermission not implemented")
}
func (*UnimplementedAdminPermissionServiceServer) GetUserPagePermission(ctx context.Context, req *GetUserPagePermissionRequest) (*PagePermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserPagePermission not implemented")
}
func (*UnimplementedAdminPermissionServiceServer) GetPermissionGroup(ctx context.Context, req *GetPermissionGroupRequest) (*GetPermissionGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPermissionGroup not implemented")
}
func (*UnimplementedAdminPermissionServiceServer) DeleteUserPermission(ctx context.Context, req *DeleteUserPermissionRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUserPermission not implemented")
}

func RegisterAdminPermissionServiceServer(s *grpc.Server, srv AdminPermissionServiceServer) {
	s.RegisterService(&_AdminPermissionService_serviceDesc, srv)
}

func _AdminPermissionService_CheckUserGroupPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUserGroupPermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminPermissionServiceServer).CheckUserGroupPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.AdminPermissionService/CheckUserGroupPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminPermissionServiceServer).CheckUserGroupPermission(ctx, req.(*CheckUserGroupPermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminPermissionService_CheckUserPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckGroupPermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminPermissionServiceServer).CheckUserPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.AdminPermissionService/CheckUserPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminPermissionServiceServer).CheckUserPermission(ctx, req.(*CheckGroupPermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminPermissionService_GetUserPagePermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserPagePermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminPermissionServiceServer).GetUserPagePermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.AdminPermissionService/GetUserPagePermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminPermissionServiceServer).GetUserPagePermission(ctx, req.(*GetUserPagePermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminPermissionService_GetPermissionGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPermissionGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminPermissionServiceServer).GetPermissionGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.AdminPermissionService/GetPermissionGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminPermissionServiceServer).GetPermissionGroup(ctx, req.(*GetPermissionGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminPermissionService_DeleteUserPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserPermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminPermissionServiceServer).DeleteUserPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.AdminPermissionService/DeleteUserPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminPermissionServiceServer).DeleteUserPermission(ctx, req.(*DeleteUserPermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdminPermissionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.AdminPermissionService",
	HandlerType: (*AdminPermissionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "checkUserGroupPermission",
			Handler:    _AdminPermissionService_CheckUserGroupPermission_Handler,
		},
		{
			MethodName: "checkUserPermission",
			Handler:    _AdminPermissionService_CheckUserPermission_Handler,
		},
		{
			MethodName: "getUserPagePermission",
			Handler:    _AdminPermissionService_GetUserPagePermission_Handler,
		},
		{
			MethodName: "getPermissionGroup",
			Handler:    _AdminPermissionService_GetPermissionGroup_Handler,
		},
		{
			MethodName: "deleteUserPermission",
			Handler:    _AdminPermissionService_DeleteUserPermission_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "admin_user_service.proto",
}
