// Code generated by protoc-gen-go. DO NOT EDIT.
// source: good.proto

package app

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetGoodCategoryRequest struct {
	Type                 int64    `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	CategoryIdList       []int64  `protobuf:"varint,2,rep,packed,name=category_id_list,json=categoryIdList,proto3" json:"category_id_list,omitempty"`
	ParentCategoryIdList []int64  `protobuf:"varint,3,rep,packed,name=parent_category_id_list,json=parentCategoryIdList,proto3" json:"parent_category_id_list,omitempty"`
	SecondCategoryIdList []int64  `protobuf:"varint,4,rep,packed,name=second_category_id_list,json=secondCategoryIdList,proto3" json:"second_category_id_list,omitempty"`
	Channel              int64    `protobuf:"varint,5,opt,name=channel,proto3" json:"channel,omitempty"`
	BusinessId           int64    `protobuf:"varint,6,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	BusinessGroupId      int64    `protobuf:"varint,7,opt,name=business_group_id,json=businessGroupId,proto3" json:"business_group_id,omitempty"`
	Level                int64    `protobuf:"varint,8,opt,name=level,proto3" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGoodCategoryRequest) Reset()         { *m = GetGoodCategoryRequest{} }
func (m *GetGoodCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetGoodCategoryRequest) ProtoMessage()    {}
func (*GetGoodCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{0}
}

func (m *GetGoodCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGoodCategoryRequest.Unmarshal(m, b)
}
func (m *GetGoodCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGoodCategoryRequest.Marshal(b, m, deterministic)
}
func (m *GetGoodCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGoodCategoryRequest.Merge(m, src)
}
func (m *GetGoodCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_GetGoodCategoryRequest.Size(m)
}
func (m *GetGoodCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGoodCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGoodCategoryRequest proto.InternalMessageInfo

func (m *GetGoodCategoryRequest) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GetGoodCategoryRequest) GetCategoryIdList() []int64 {
	if m != nil {
		return m.CategoryIdList
	}
	return nil
}

func (m *GetGoodCategoryRequest) GetParentCategoryIdList() []int64 {
	if m != nil {
		return m.ParentCategoryIdList
	}
	return nil
}

func (m *GetGoodCategoryRequest) GetSecondCategoryIdList() []int64 {
	if m != nil {
		return m.SecondCategoryIdList
	}
	return nil
}

func (m *GetGoodCategoryRequest) GetChannel() int64 {
	if m != nil {
		return m.Channel
	}
	return 0
}

func (m *GetGoodCategoryRequest) GetBusinessId() int64 {
	if m != nil {
		return m.BusinessId
	}
	return 0
}

func (m *GetGoodCategoryRequest) GetBusinessGroupId() int64 {
	if m != nil {
		return m.BusinessGroupId
	}
	return 0
}

func (m *GetGoodCategoryRequest) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

type GetGoodCategoryResponse struct {
	List                 []*GoodCategory `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetGoodCategoryResponse) Reset()         { *m = GetGoodCategoryResponse{} }
func (m *GetGoodCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*GetGoodCategoryResponse) ProtoMessage()    {}
func (*GetGoodCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{1}
}

func (m *GetGoodCategoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGoodCategoryResponse.Unmarshal(m, b)
}
func (m *GetGoodCategoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGoodCategoryResponse.Marshal(b, m, deterministic)
}
func (m *GetGoodCategoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGoodCategoryResponse.Merge(m, src)
}
func (m *GetGoodCategoryResponse) XXX_Size() int {
	return xxx_messageInfo_GetGoodCategoryResponse.Size(m)
}
func (m *GetGoodCategoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGoodCategoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetGoodCategoryResponse proto.InternalMessageInfo

func (m *GetGoodCategoryResponse) GetList() []*GoodCategory {
	if m != nil {
		return m.List
	}
	return nil
}

type GoodCategory struct {
	Id                   int64                     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Level                int64                     `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	ShopSpcNum           int64                     `protobuf:"varint,4,opt,name=shop_spc_num,json=shopSpcNum,proto3" json:"shop_spc_num,omitempty"`
	WholesSpcNum         int64                     `protobuf:"varint,5,opt,name=wholes_spc_num,json=wholesSpcNum,proto3" json:"wholes_spc_num,omitempty"`
	TmSpcNum             int64                     `protobuf:"varint,6,opt,name=tm_spc_num,json=tmSpcNum,proto3" json:"tm_spc_num,omitempty"`
	Children             []*GoodCategory           `protobuf:"bytes,7,rep,name=children,proto3" json:"children,omitempty"`
	Specs                []*GoodSpecificationsInfo `protobuf:"bytes,8,rep,name=specs,proto3" json:"specs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GoodCategory) Reset()         { *m = GoodCategory{} }
func (m *GoodCategory) String() string { return proto.CompactTextString(m) }
func (*GoodCategory) ProtoMessage()    {}
func (*GoodCategory) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{2}
}

func (m *GoodCategory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodCategory.Unmarshal(m, b)
}
func (m *GoodCategory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodCategory.Marshal(b, m, deterministic)
}
func (m *GoodCategory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodCategory.Merge(m, src)
}
func (m *GoodCategory) XXX_Size() int {
	return xxx_messageInfo_GoodCategory.Size(m)
}
func (m *GoodCategory) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodCategory.DiscardUnknown(m)
}

var xxx_messageInfo_GoodCategory proto.InternalMessageInfo

func (m *GoodCategory) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GoodCategory) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GoodCategory) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *GoodCategory) GetShopSpcNum() int64 {
	if m != nil {
		return m.ShopSpcNum
	}
	return 0
}

func (m *GoodCategory) GetWholesSpcNum() int64 {
	if m != nil {
		return m.WholesSpcNum
	}
	return 0
}

func (m *GoodCategory) GetTmSpcNum() int64 {
	if m != nil {
		return m.TmSpcNum
	}
	return 0
}

func (m *GoodCategory) GetChildren() []*GoodCategory {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *GoodCategory) GetSpecs() []*GoodSpecificationsInfo {
	if m != nil {
		return m.Specs
	}
	return nil
}

type EditGoodCategoryRequest struct {
	Uid                  int64                     `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name                 string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PId                  int64                     `protobuf:"varint,3,opt,name=p_id,json=pId,proto3" json:"p_id,omitempty"`
	Id                   int64                     `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Level                int64                     `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	List                 []*GoodSpecificationsInfo `protobuf:"bytes,6,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *EditGoodCategoryRequest) Reset()         { *m = EditGoodCategoryRequest{} }
func (m *EditGoodCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*EditGoodCategoryRequest) ProtoMessage()    {}
func (*EditGoodCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{3}
}

func (m *EditGoodCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditGoodCategoryRequest.Unmarshal(m, b)
}
func (m *EditGoodCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditGoodCategoryRequest.Marshal(b, m, deterministic)
}
func (m *EditGoodCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditGoodCategoryRequest.Merge(m, src)
}
func (m *EditGoodCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_EditGoodCategoryRequest.Size(m)
}
func (m *EditGoodCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EditGoodCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EditGoodCategoryRequest proto.InternalMessageInfo

func (m *EditGoodCategoryRequest) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *EditGoodCategoryRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EditGoodCategoryRequest) GetPId() int64 {
	if m != nil {
		return m.PId
	}
	return 0
}

func (m *EditGoodCategoryRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EditGoodCategoryRequest) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *EditGoodCategoryRequest) GetList() []*GoodSpecificationsInfo {
	if m != nil {
		return m.List
	}
	return nil
}

type EditGoodCategoryStatusRequest struct {
	Id                   []int64  `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	Status               int64    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditGoodCategoryStatusRequest) Reset()         { *m = EditGoodCategoryStatusRequest{} }
func (m *EditGoodCategoryStatusRequest) String() string { return proto.CompactTextString(m) }
func (*EditGoodCategoryStatusRequest) ProtoMessage()    {}
func (*EditGoodCategoryStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{4}
}

func (m *EditGoodCategoryStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditGoodCategoryStatusRequest.Unmarshal(m, b)
}
func (m *EditGoodCategoryStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditGoodCategoryStatusRequest.Marshal(b, m, deterministic)
}
func (m *EditGoodCategoryStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditGoodCategoryStatusRequest.Merge(m, src)
}
func (m *EditGoodCategoryStatusRequest) XXX_Size() int {
	return xxx_messageInfo_EditGoodCategoryStatusRequest.Size(m)
}
func (m *EditGoodCategoryStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EditGoodCategoryStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EditGoodCategoryStatusRequest proto.InternalMessageInfo

func (m *EditGoodCategoryStatusRequest) GetId() []int64 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *EditGoodCategoryStatusRequest) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

type DeliveryListRequest struct {
	BusinessId           int64    `protobuf:"varint,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	Id                   []int64  `protobuf:"varint,2,rep,packed,name=id,proto3" json:"id,omitempty"`
	SpuId                int64    `protobuf:"varint,3,opt,name=spu_id,json=spuId,proto3" json:"spu_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeliveryListRequest) Reset()         { *m = DeliveryListRequest{} }
func (m *DeliveryListRequest) String() string { return proto.CompactTextString(m) }
func (*DeliveryListRequest) ProtoMessage()    {}
func (*DeliveryListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{5}
}

func (m *DeliveryListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeliveryListRequest.Unmarshal(m, b)
}
func (m *DeliveryListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeliveryListRequest.Marshal(b, m, deterministic)
}
func (m *DeliveryListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliveryListRequest.Merge(m, src)
}
func (m *DeliveryListRequest) XXX_Size() int {
	return xxx_messageInfo_DeliveryListRequest.Size(m)
}
func (m *DeliveryListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliveryListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeliveryListRequest proto.InternalMessageInfo

func (m *DeliveryListRequest) GetBusinessId() int64 {
	if m != nil {
		return m.BusinessId
	}
	return 0
}

func (m *DeliveryListRequest) GetId() []int64 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DeliveryListRequest) GetSpuId() int64 {
	if m != nil {
		return m.SpuId
	}
	return 0
}

type DeliveryListResponse struct {
	List                 []*DeliveryData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeliveryListResponse) Reset()         { *m = DeliveryListResponse{} }
func (m *DeliveryListResponse) String() string { return proto.CompactTextString(m) }
func (*DeliveryListResponse) ProtoMessage()    {}
func (*DeliveryListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{6}
}

func (m *DeliveryListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeliveryListResponse.Unmarshal(m, b)
}
func (m *DeliveryListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeliveryListResponse.Marshal(b, m, deterministic)
}
func (m *DeliveryListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliveryListResponse.Merge(m, src)
}
func (m *DeliveryListResponse) XXX_Size() int {
	return xxx_messageInfo_DeliveryListResponse.Size(m)
}
func (m *DeliveryListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliveryListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeliveryListResponse proto.InternalMessageInfo

func (m *DeliveryListResponse) GetList() []*DeliveryData {
	if m != nil {
		return m.List
	}
	return nil
}

type EditDeliveryListRequest struct {
	BusinessId           int64         `protobuf:"varint,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	Uid                  int64         `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Data                 *DeliveryData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *EditDeliveryListRequest) Reset()         { *m = EditDeliveryListRequest{} }
func (m *EditDeliveryListRequest) String() string { return proto.CompactTextString(m) }
func (*EditDeliveryListRequest) ProtoMessage()    {}
func (*EditDeliveryListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{7}
}

func (m *EditDeliveryListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditDeliveryListRequest.Unmarshal(m, b)
}
func (m *EditDeliveryListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditDeliveryListRequest.Marshal(b, m, deterministic)
}
func (m *EditDeliveryListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditDeliveryListRequest.Merge(m, src)
}
func (m *EditDeliveryListRequest) XXX_Size() int {
	return xxx_messageInfo_EditDeliveryListRequest.Size(m)
}
func (m *EditDeliveryListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EditDeliveryListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EditDeliveryListRequest proto.InternalMessageInfo

func (m *EditDeliveryListRequest) GetBusinessId() int64 {
	if m != nil {
		return m.BusinessId
	}
	return 0
}

func (m *EditDeliveryListRequest) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *EditDeliveryListRequest) GetData() *DeliveryData {
	if m != nil {
		return m.Data
	}
	return nil
}

type DelDeliveryRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BusinessId           int64    `protobuf:"varint,2,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	Uid                  int64    `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelDeliveryRequest) Reset()         { *m = DelDeliveryRequest{} }
func (m *DelDeliveryRequest) String() string { return proto.CompactTextString(m) }
func (*DelDeliveryRequest) ProtoMessage()    {}
func (*DelDeliveryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{8}
}

func (m *DelDeliveryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelDeliveryRequest.Unmarshal(m, b)
}
func (m *DelDeliveryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelDeliveryRequest.Marshal(b, m, deterministic)
}
func (m *DelDeliveryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelDeliveryRequest.Merge(m, src)
}
func (m *DelDeliveryRequest) XXX_Size() int {
	return xxx_messageInfo_DelDeliveryRequest.Size(m)
}
func (m *DelDeliveryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DelDeliveryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DelDeliveryRequest proto.InternalMessageInfo

func (m *DelDeliveryRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DelDeliveryRequest) GetBusinessId() int64 {
	if m != nil {
		return m.BusinessId
	}
	return 0
}

func (m *DelDeliveryRequest) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type EditGoodRequest struct {
	SpuId                int64             `protobuf:"varint,1,opt,name=spu_id,json=spuId,proto3" json:"spu_id,omitempty"`
	Type                 int64             `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	SaleTime             int64             `protobuf:"varint,3,opt,name=sale_time,json=saleTime,proto3" json:"sale_time,omitempty"`
	Location             string            `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	SpuName              string            `protobuf:"bytes,5,opt,name=spu_name,json=spuName,proto3" json:"spu_name,omitempty"`
	CategoryId           int64             `protobuf:"varint,6,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Detail               string            `protobuf:"bytes,7,opt,name=detail,proto3" json:"detail,omitempty"`
	IsDraft              bool              `protobuf:"varint,8,opt,name=is_draft,json=isDraft,proto3" json:"is_draft,omitempty"`
	Infos                []*Sku            `protobuf:"bytes,9,rep,name=infos,proto3" json:"infos,omitempty"`
	Status               int64             `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	Prefix               string            `protobuf:"bytes,11,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Photos               []*GoodQiniuPhoto `protobuf:"bytes,12,rep,name=photos,proto3" json:"photos,omitempty"`
	TempPhotos           []*GoodQiniuPhoto `protobuf:"bytes,13,rep,name=temp_photos,json=tempPhotos,proto3" json:"temp_photos,omitempty"`
	Delivery             []*DeliveryData   `protobuf:"bytes,14,rep,name=delivery,proto3" json:"delivery,omitempty"`
	Uid                  int64             `protobuf:"varint,15,opt,name=uid,proto3" json:"uid,omitempty"`
	BusinessId           int64             `protobuf:"varint,16,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EditGoodRequest) Reset()         { *m = EditGoodRequest{} }
func (m *EditGoodRequest) String() string { return proto.CompactTextString(m) }
func (*EditGoodRequest) ProtoMessage()    {}
func (*EditGoodRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{9}
}

func (m *EditGoodRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditGoodRequest.Unmarshal(m, b)
}
func (m *EditGoodRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditGoodRequest.Marshal(b, m, deterministic)
}
func (m *EditGoodRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditGoodRequest.Merge(m, src)
}
func (m *EditGoodRequest) XXX_Size() int {
	return xxx_messageInfo_EditGoodRequest.Size(m)
}
func (m *EditGoodRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EditGoodRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EditGoodRequest proto.InternalMessageInfo

func (m *EditGoodRequest) GetSpuId() int64 {
	if m != nil {
		return m.SpuId
	}
	return 0
}

func (m *EditGoodRequest) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *EditGoodRequest) GetSaleTime() int64 {
	if m != nil {
		return m.SaleTime
	}
	return 0
}

func (m *EditGoodRequest) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *EditGoodRequest) GetSpuName() string {
	if m != nil {
		return m.SpuName
	}
	return ""
}

func (m *EditGoodRequest) GetCategoryId() int64 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

func (m *EditGoodRequest) GetDetail() string {
	if m != nil {
		return m.Detail
	}
	return ""
}

func (m *EditGoodRequest) GetIsDraft() bool {
	if m != nil {
		return m.IsDraft
	}
	return false
}

func (m *EditGoodRequest) GetInfos() []*Sku {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *EditGoodRequest) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *EditGoodRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *EditGoodRequest) GetPhotos() []*GoodQiniuPhoto {
	if m != nil {
		return m.Photos
	}
	return nil
}

func (m *EditGoodRequest) GetTempPhotos() []*GoodQiniuPhoto {
	if m != nil {
		return m.TempPhotos
	}
	return nil
}

func (m *EditGoodRequest) GetDelivery() []*DeliveryData {
	if m != nil {
		return m.Delivery
	}
	return nil
}

func (m *EditGoodRequest) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *EditGoodRequest) GetBusinessId() int64 {
	if m != nil {
		return m.BusinessId
	}
	return 0
}

type GoodQiniuPhoto struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Prefix               string   `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Status               int64    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Type                 int64    `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodQiniuPhoto) Reset()         { *m = GoodQiniuPhoto{} }
func (m *GoodQiniuPhoto) String() string { return proto.CompactTextString(m) }
func (*GoodQiniuPhoto) ProtoMessage()    {}
func (*GoodQiniuPhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{10}
}

func (m *GoodQiniuPhoto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodQiniuPhoto.Unmarshal(m, b)
}
func (m *GoodQiniuPhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodQiniuPhoto.Marshal(b, m, deterministic)
}
func (m *GoodQiniuPhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodQiniuPhoto.Merge(m, src)
}
func (m *GoodQiniuPhoto) XXX_Size() int {
	return xxx_messageInfo_GoodQiniuPhoto.Size(m)
}
func (m *GoodQiniuPhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodQiniuPhoto.DiscardUnknown(m)
}

var xxx_messageInfo_GoodQiniuPhoto proto.InternalMessageInfo

func (m *GoodQiniuPhoto) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *GoodQiniuPhoto) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *GoodQiniuPhoto) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GoodQiniuPhoto) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

type EditGoodResponse struct {
	SpuId                int64    `protobuf:"varint,1,opt,name=spu_id,json=spuId,proto3" json:"spu_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditGoodResponse) Reset()         { *m = EditGoodResponse{} }
func (m *EditGoodResponse) String() string { return proto.CompactTextString(m) }
func (*EditGoodResponse) ProtoMessage()    {}
func (*EditGoodResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{11}
}

func (m *EditGoodResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditGoodResponse.Unmarshal(m, b)
}
func (m *EditGoodResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditGoodResponse.Marshal(b, m, deterministic)
}
func (m *EditGoodResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditGoodResponse.Merge(m, src)
}
func (m *EditGoodResponse) XXX_Size() int {
	return xxx_messageInfo_EditGoodResponse.Size(m)
}
func (m *EditGoodResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EditGoodResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EditGoodResponse proto.InternalMessageInfo

func (m *EditGoodResponse) GetSpuId() int64 {
	if m != nil {
		return m.SpuId
	}
	return 0
}

type GoodDetailRequest struct {
	SkuId                int64    `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	SpuId                int64    `protobuf:"varint,2,opt,name=spu_id,json=spuId,proto3" json:"spu_id,omitempty"`
	BusinessGroupId      int64    `protobuf:"varint,3,opt,name=business_group_id,json=businessGroupId,proto3" json:"business_group_id,omitempty"`
	SkuStatus            int64    `protobuf:"varint,4,opt,name=sku_status,json=skuStatus,proto3" json:"sku_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodDetailRequest) Reset()         { *m = GoodDetailRequest{} }
func (m *GoodDetailRequest) String() string { return proto.CompactTextString(m) }
func (*GoodDetailRequest) ProtoMessage()    {}
func (*GoodDetailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{12}
}

func (m *GoodDetailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodDetailRequest.Unmarshal(m, b)
}
func (m *GoodDetailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodDetailRequest.Marshal(b, m, deterministic)
}
func (m *GoodDetailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodDetailRequest.Merge(m, src)
}
func (m *GoodDetailRequest) XXX_Size() int {
	return xxx_messageInfo_GoodDetailRequest.Size(m)
}
func (m *GoodDetailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodDetailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GoodDetailRequest proto.InternalMessageInfo

func (m *GoodDetailRequest) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *GoodDetailRequest) GetSpuId() int64 {
	if m != nil {
		return m.SpuId
	}
	return 0
}

func (m *GoodDetailRequest) GetBusinessGroupId() int64 {
	if m != nil {
		return m.BusinessGroupId
	}
	return 0
}

func (m *GoodDetailRequest) GetSkuStatus() int64 {
	if m != nil {
		return m.SkuStatus
	}
	return 0
}

type GoodDetailResponse struct {
	SpuId                int64           `protobuf:"varint,1,opt,name=spu_id,json=spuId,proto3" json:"spu_id,omitempty"`
	SpuName              string          `protobuf:"bytes,2,opt,name=spu_name,json=spuName,proto3" json:"spu_name,omitempty"`
	DeliveryInfo         []*DeliveryData `protobuf:"bytes,3,rep,name=delivery_info,json=deliveryInfo,proto3" json:"delivery_info,omitempty"`
	Status               int64           `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Location             string          `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	CategoryId           int64           `protobuf:"varint,6,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	ParentCategoryId     int64           `protobuf:"varint,7,opt,name=parent_category_id,json=parentCategoryId,proto3" json:"parent_category_id,omitempty"`
	Detail               string          `protobuf:"bytes,8,opt,name=detail,proto3" json:"detail,omitempty"`
	Photos               []*PhotoInfo    `protobuf:"bytes,9,rep,name=photos,proto3" json:"photos,omitempty"`
	List                 []*Sku          `protobuf:"bytes,10,rep,name=list,proto3" json:"list,omitempty"`
	StatusMessage        string          `protobuf:"bytes,11,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	SpuNumber            string          `protobuf:"bytes,12,opt,name=spu_number,json=spuNumber,proto3" json:"spu_number,omitempty"`
	CommentNum           int64           `protobuf:"varint,13,opt,name=comment_num,json=commentNum,proto3" json:"comment_num,omitempty"`
	BusinessId           int64           `protobuf:"varint,15,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	Stock                int64           `protobuf:"varint,16,opt,name=stock,proto3" json:"stock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GoodDetailResponse) Reset()         { *m = GoodDetailResponse{} }
func (m *GoodDetailResponse) String() string { return proto.CompactTextString(m) }
func (*GoodDetailResponse) ProtoMessage()    {}
func (*GoodDetailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{13}
}

func (m *GoodDetailResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodDetailResponse.Unmarshal(m, b)
}
func (m *GoodDetailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodDetailResponse.Marshal(b, m, deterministic)
}
func (m *GoodDetailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodDetailResponse.Merge(m, src)
}
func (m *GoodDetailResponse) XXX_Size() int {
	return xxx_messageInfo_GoodDetailResponse.Size(m)
}
func (m *GoodDetailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodDetailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GoodDetailResponse proto.InternalMessageInfo

func (m *GoodDetailResponse) GetSpuId() int64 {
	if m != nil {
		return m.SpuId
	}
	return 0
}

func (m *GoodDetailResponse) GetSpuName() string {
	if m != nil {
		return m.SpuName
	}
	return ""
}

func (m *GoodDetailResponse) GetDeliveryInfo() []*DeliveryData {
	if m != nil {
		return m.DeliveryInfo
	}
	return nil
}

func (m *GoodDetailResponse) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GoodDetailResponse) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *GoodDetailResponse) GetCategoryId() int64 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

func (m *GoodDetailResponse) GetParentCategoryId() int64 {
	if m != nil {
		return m.ParentCategoryId
	}
	return 0
}

func (m *GoodDetailResponse) GetDetail() string {
	if m != nil {
		return m.Detail
	}
	return ""
}

func (m *GoodDetailResponse) GetPhotos() []*PhotoInfo {
	if m != nil {
		return m.Photos
	}
	return nil
}

func (m *GoodDetailResponse) GetList() []*Sku {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *GoodDetailResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func (m *GoodDetailResponse) GetSpuNumber() string {
	if m != nil {
		return m.SpuNumber
	}
	return ""
}

func (m *GoodDetailResponse) GetCommentNum() int64 {
	if m != nil {
		return m.CommentNum
	}
	return 0
}

func (m *GoodDetailResponse) GetBusinessId() int64 {
	if m != nil {
		return m.BusinessId
	}
	return 0
}

func (m *GoodDetailResponse) GetStock() int64 {
	if m != nil {
		return m.Stock
	}
	return 0
}

type GetOrderSkuListRequest struct {
	Data                 map[int64]int64 `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetOrderSkuListRequest) Reset()         { *m = GetOrderSkuListRequest{} }
func (m *GetOrderSkuListRequest) String() string { return proto.CompactTextString(m) }
func (*GetOrderSkuListRequest) ProtoMessage()    {}
func (*GetOrderSkuListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{14}
}

func (m *GetOrderSkuListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrderSkuListRequest.Unmarshal(m, b)
}
func (m *GetOrderSkuListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrderSkuListRequest.Marshal(b, m, deterministic)
}
func (m *GetOrderSkuListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrderSkuListRequest.Merge(m, src)
}
func (m *GetOrderSkuListRequest) XXX_Size() int {
	return xxx_messageInfo_GetOrderSkuListRequest.Size(m)
}
func (m *GetOrderSkuListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrderSkuListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrderSkuListRequest proto.InternalMessageInfo

func (m *GetOrderSkuListRequest) GetData() map[int64]int64 {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetOrderSkuListResponse struct {
	List                 []*GetSubOrderData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetOrderSkuListResponse) Reset()         { *m = GetOrderSkuListResponse{} }
func (m *GetOrderSkuListResponse) String() string { return proto.CompactTextString(m) }
func (*GetOrderSkuListResponse) ProtoMessage()    {}
func (*GetOrderSkuListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{15}
}

func (m *GetOrderSkuListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrderSkuListResponse.Unmarshal(m, b)
}
func (m *GetOrderSkuListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrderSkuListResponse.Marshal(b, m, deterministic)
}
func (m *GetOrderSkuListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrderSkuListResponse.Merge(m, src)
}
func (m *GetOrderSkuListResponse) XXX_Size() int {
	return xxx_messageInfo_GetOrderSkuListResponse.Size(m)
}
func (m *GetOrderSkuListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrderSkuListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrderSkuListResponse proto.InternalMessageInfo

func (m *GetOrderSkuListResponse) GetList() []*GetSubOrderData {
	if m != nil {
		return m.List
	}
	return nil
}

type GetSubOrderData struct {
	SellerId             int64                    `protobuf:"varint,1,opt,name=seller_id,json=sellerId,proto3" json:"seller_id,omitempty"`
	ShopDeliverPriceMap  map[int64]int64          `protobuf:"bytes,2,rep,name=shop_deliver_price_map,json=shopDeliverPriceMap,proto3" json:"shop_deliver_price_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	List                 []*GetSubOrderDetailData `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetSubOrderData) Reset()         { *m = GetSubOrderData{} }
func (m *GetSubOrderData) String() string { return proto.CompactTextString(m) }
func (*GetSubOrderData) ProtoMessage()    {}
func (*GetSubOrderData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{16}
}

func (m *GetSubOrderData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubOrderData.Unmarshal(m, b)
}
func (m *GetSubOrderData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubOrderData.Marshal(b, m, deterministic)
}
func (m *GetSubOrderData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubOrderData.Merge(m, src)
}
func (m *GetSubOrderData) XXX_Size() int {
	return xxx_messageInfo_GetSubOrderData.Size(m)
}
func (m *GetSubOrderData) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubOrderData.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubOrderData proto.InternalMessageInfo

func (m *GetSubOrderData) GetSellerId() int64 {
	if m != nil {
		return m.SellerId
	}
	return 0
}

func (m *GetSubOrderData) GetShopDeliverPriceMap() map[int64]int64 {
	if m != nil {
		return m.ShopDeliverPriceMap
	}
	return nil
}

func (m *GetSubOrderData) GetList() []*GetSubOrderDetailData {
	if m != nil {
		return m.List
	}
	return nil
}

type GetSubOrderDetailData struct {
	SkuId                int64    `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Num                  int64    `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	AgreementPrice       int64    `protobuf:"varint,3,opt,name=agreement_price,json=agreementPrice,proto3" json:"agreement_price,omitempty"`
	Price                int64    `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	MemberPrice          int64    `protobuf:"varint,5,opt,name=member_price,json=memberPrice,proto3" json:"member_price,omitempty"`
	CostPrice            int64    `protobuf:"varint,6,opt,name=cost_price,json=costPrice,proto3" json:"cost_price,omitempty"`
	SpuId                int64    `protobuf:"varint,7,opt,name=spu_id,json=spuId,proto3" json:"spu_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSubOrderDetailData) Reset()         { *m = GetSubOrderDetailData{} }
func (m *GetSubOrderDetailData) String() string { return proto.CompactTextString(m) }
func (*GetSubOrderDetailData) ProtoMessage()    {}
func (*GetSubOrderDetailData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{17}
}

func (m *GetSubOrderDetailData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubOrderDetailData.Unmarshal(m, b)
}
func (m *GetSubOrderDetailData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubOrderDetailData.Marshal(b, m, deterministic)
}
func (m *GetSubOrderDetailData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubOrderDetailData.Merge(m, src)
}
func (m *GetSubOrderDetailData) XXX_Size() int {
	return xxx_messageInfo_GetSubOrderDetailData.Size(m)
}
func (m *GetSubOrderDetailData) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubOrderDetailData.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubOrderDetailData proto.InternalMessageInfo

func (m *GetSubOrderDetailData) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *GetSubOrderDetailData) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *GetSubOrderDetailData) GetAgreementPrice() int64 {
	if m != nil {
		return m.AgreementPrice
	}
	return 0
}

func (m *GetSubOrderDetailData) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *GetSubOrderDetailData) GetMemberPrice() int64 {
	if m != nil {
		return m.MemberPrice
	}
	return 0
}

func (m *GetSubOrderDetailData) GetCostPrice() int64 {
	if m != nil {
		return m.CostPrice
	}
	return 0
}

func (m *GetSubOrderDetailData) GetSpuId() int64 {
	if m != nil {
		return m.SpuId
	}
	return 0
}

type GetSkuIdQueryRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	BrandList            []int64  `protobuf:"varint,2,rep,packed,name=brand_list,json=brandList,proto3" json:"brand_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSkuIdQueryRequest) Reset()         { *m = GetSkuIdQueryRequest{} }
func (m *GetSkuIdQueryRequest) String() string { return proto.CompactTextString(m) }
func (*GetSkuIdQueryRequest) ProtoMessage()    {}
func (*GetSkuIdQueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{18}
}

func (m *GetSkuIdQueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSkuIdQueryRequest.Unmarshal(m, b)
}
func (m *GetSkuIdQueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSkuIdQueryRequest.Marshal(b, m, deterministic)
}
func (m *GetSkuIdQueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSkuIdQueryRequest.Merge(m, src)
}
func (m *GetSkuIdQueryRequest) XXX_Size() int {
	return xxx_messageInfo_GetSkuIdQueryRequest.Size(m)
}
func (m *GetSkuIdQueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSkuIdQueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSkuIdQueryRequest proto.InternalMessageInfo

func (m *GetSkuIdQueryRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *GetSkuIdQueryRequest) GetBrandList() []int64 {
	if m != nil {
		return m.BrandList
	}
	return nil
}

type GetSkuIdQueryResponse struct {
	List                 []int64  `protobuf:"varint,1,rep,packed,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSkuIdQueryResponse) Reset()         { *m = GetSkuIdQueryResponse{} }
func (m *GetSkuIdQueryResponse) String() string { return proto.CompactTextString(m) }
func (*GetSkuIdQueryResponse) ProtoMessage()    {}
func (*GetSkuIdQueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{19}
}

func (m *GetSkuIdQueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSkuIdQueryResponse.Unmarshal(m, b)
}
func (m *GetSkuIdQueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSkuIdQueryResponse.Marshal(b, m, deterministic)
}
func (m *GetSkuIdQueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSkuIdQueryResponse.Merge(m, src)
}
func (m *GetSkuIdQueryResponse) XXX_Size() int {
	return xxx_messageInfo_GetSkuIdQueryResponse.Size(m)
}
func (m *GetSkuIdQueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSkuIdQueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSkuIdQueryResponse proto.InternalMessageInfo

func (m *GetSkuIdQueryResponse) GetList() []int64 {
	if m != nil {
		return m.List
	}
	return nil
}

type GetSkuOptionsRequest struct {
	SpuIdList            []int64  `protobuf:"varint,1,rep,packed,name=spu_id_list,json=spuIdList,proto3" json:"spu_id_list,omitempty"`
	SkuIdList            []int64  `protobuf:"varint,2,rep,packed,name=sku_id_list,json=skuIdList,proto3" json:"sku_id_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSkuOptionsRequest) Reset()         { *m = GetSkuOptionsRequest{} }
func (m *GetSkuOptionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetSkuOptionsRequest) ProtoMessage()    {}
func (*GetSkuOptionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{20}
}

func (m *GetSkuOptionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSkuOptionsRequest.Unmarshal(m, b)
}
func (m *GetSkuOptionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSkuOptionsRequest.Marshal(b, m, deterministic)
}
func (m *GetSkuOptionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSkuOptionsRequest.Merge(m, src)
}
func (m *GetSkuOptionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetSkuOptionsRequest.Size(m)
}
func (m *GetSkuOptionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSkuOptionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSkuOptionsRequest proto.InternalMessageInfo

func (m *GetSkuOptionsRequest) GetSpuIdList() []int64 {
	if m != nil {
		return m.SpuIdList
	}
	return nil
}

func (m *GetSkuOptionsRequest) GetSkuIdList() []int64 {
	if m != nil {
		return m.SkuIdList
	}
	return nil
}

type GetSkuOptionsResponse struct {
	Result               map[int64]*GetSkuOptions `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetSkuOptionsResponse) Reset()         { *m = GetSkuOptionsResponse{} }
func (m *GetSkuOptionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetSkuOptionsResponse) ProtoMessage()    {}
func (*GetSkuOptionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{21}
}

func (m *GetSkuOptionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSkuOptionsResponse.Unmarshal(m, b)
}
func (m *GetSkuOptionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSkuOptionsResponse.Marshal(b, m, deterministic)
}
func (m *GetSkuOptionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSkuOptionsResponse.Merge(m, src)
}
func (m *GetSkuOptionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetSkuOptionsResponse.Size(m)
}
func (m *GetSkuOptionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSkuOptionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSkuOptionsResponse proto.InternalMessageInfo

func (m *GetSkuOptionsResponse) GetResult() map[int64]*GetSkuOptions {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetSkuOptions struct {
	List                 []*SkuOption `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetSkuOptions) Reset()         { *m = GetSkuOptions{} }
func (m *GetSkuOptions) String() string { return proto.CompactTextString(m) }
func (*GetSkuOptions) ProtoMessage()    {}
func (*GetSkuOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{22}
}

func (m *GetSkuOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSkuOptions.Unmarshal(m, b)
}
func (m *GetSkuOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSkuOptions.Marshal(b, m, deterministic)
}
func (m *GetSkuOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSkuOptions.Merge(m, src)
}
func (m *GetSkuOptions) XXX_Size() int {
	return xxx_messageInfo_GetSkuOptions.Size(m)
}
func (m *GetSkuOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSkuOptions.DiscardUnknown(m)
}

var xxx_messageInfo_GetSkuOptions proto.InternalMessageInfo

func (m *GetSkuOptions) GetList() []*SkuOption {
	if m != nil {
		return m.List
	}
	return nil
}

type GetSpuListRequest struct {
	List                 []int64  `protobuf:"varint,1,rep,packed,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSpuListRequest) Reset()         { *m = GetSpuListRequest{} }
func (m *GetSpuListRequest) String() string { return proto.CompactTextString(m) }
func (*GetSpuListRequest) ProtoMessage()    {}
func (*GetSpuListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{23}
}

func (m *GetSpuListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSpuListRequest.Unmarshal(m, b)
}
func (m *GetSpuListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSpuListRequest.Marshal(b, m, deterministic)
}
func (m *GetSpuListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSpuListRequest.Merge(m, src)
}
func (m *GetSpuListRequest) XXX_Size() int {
	return xxx_messageInfo_GetSpuListRequest.Size(m)
}
func (m *GetSpuListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSpuListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSpuListRequest proto.InternalMessageInfo

func (m *GetSpuListRequest) GetList() []int64 {
	if m != nil {
		return m.List
	}
	return nil
}

type GetSpuListResponse struct {
	List                 []*Spu   `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSpuListResponse) Reset()         { *m = GetSpuListResponse{} }
func (m *GetSpuListResponse) String() string { return proto.CompactTextString(m) }
func (*GetSpuListResponse) ProtoMessage()    {}
func (*GetSpuListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed189da8301258ed, []int{24}
}

func (m *GetSpuListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSpuListResponse.Unmarshal(m, b)
}
func (m *GetSpuListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSpuListResponse.Marshal(b, m, deterministic)
}
func (m *GetSpuListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSpuListResponse.Merge(m, src)
}
func (m *GetSpuListResponse) XXX_Size() int {
	return xxx_messageInfo_GetSpuListResponse.Size(m)
}
func (m *GetSpuListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSpuListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSpuListResponse proto.InternalMessageInfo

func (m *GetSpuListResponse) GetList() []*Spu {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*GetGoodCategoryRequest)(nil), "app.GetGoodCategoryRequest")
	proto.RegisterType((*GetGoodCategoryResponse)(nil), "app.GetGoodCategoryResponse")
	proto.RegisterType((*GoodCategory)(nil), "app.good_category")
	proto.RegisterType((*EditGoodCategoryRequest)(nil), "app.EditGoodCategoryRequest")
	proto.RegisterType((*EditGoodCategoryStatusRequest)(nil), "app.EditGoodCategoryStatusRequest")
	proto.RegisterType((*DeliveryListRequest)(nil), "app.DeliveryListRequest")
	proto.RegisterType((*DeliveryListResponse)(nil), "app.DeliveryListResponse")
	proto.RegisterType((*EditDeliveryListRequest)(nil), "app.EditDeliveryListRequest")
	proto.RegisterType((*DelDeliveryRequest)(nil), "app.DelDeliveryRequest")
	proto.RegisterType((*EditGoodRequest)(nil), "app.EditGoodRequest")
	proto.RegisterType((*GoodQiniuPhoto)(nil), "app.GoodQiniuPhoto")
	proto.RegisterType((*EditGoodResponse)(nil), "app.EditGoodResponse")
	proto.RegisterType((*GoodDetailRequest)(nil), "app.GoodDetailRequest")
	proto.RegisterType((*GoodDetailResponse)(nil), "app.GoodDetailResponse")
	proto.RegisterType((*GetOrderSkuListRequest)(nil), "app.getOrderSkuListRequest")
	proto.RegisterMapType((map[int64]int64)(nil), "app.getOrderSkuListRequest.DataEntry")
	proto.RegisterType((*GetOrderSkuListResponse)(nil), "app.getOrderSkuListResponse")
	proto.RegisterType((*GetSubOrderData)(nil), "app.getSubOrderData")
	proto.RegisterMapType((map[int64]int64)(nil), "app.getSubOrderData.ShopDeliverPriceMapEntry")
	proto.RegisterType((*GetSubOrderDetailData)(nil), "app.getSubOrderDetailData")
	proto.RegisterType((*GetSkuIdQueryRequest)(nil), "app.getSkuIdQueryRequest")
	proto.RegisterType((*GetSkuIdQueryResponse)(nil), "app.getSkuIdQueryResponse")
	proto.RegisterType((*GetSkuOptionsRequest)(nil), "app.getSkuOptionsRequest")
	proto.RegisterType((*GetSkuOptionsResponse)(nil), "app.getSkuOptionsResponse")
	proto.RegisterMapType((map[int64]*GetSkuOptions)(nil), "app.getSkuOptionsResponse.ResultEntry")
	proto.RegisterType((*GetSkuOptions)(nil), "app.GetSkuOptions")
	proto.RegisterType((*GetSpuListRequest)(nil), "app.getSpuListRequest")
	proto.RegisterType((*GetSpuListResponse)(nil), "app.getSpuListResponse")
}

func init() { proto.RegisterFile("good.proto", fileDescriptor_ed189da8301258ed) }

var fileDescriptor_ed189da8301258ed = []byte{
	// 1648 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x58, 0xdb, 0x6e, 0xe4, 0x44,
	0x13, 0xd6, 0xd8, 0x33, 0xc9, 0x4c, 0x4d, 0x32, 0x49, 0x3a, 0x93, 0xc4, 0x99, 0x4d, 0x76, 0xf3,
	0x5b, 0x7f, 0x76, 0x03, 0xcb, 0x8e, 0x44, 0x96, 0xc3, 0x82, 0xb4, 0x48, 0x68, 0xb3, 0x1b, 0x05,
	0xf6, 0x38, 0x41, 0x70, 0x85, 0x2c, 0x67, 0xdc, 0x49, 0xac, 0xf1, 0x69, 0xdd, 0x76, 0x20, 0xaf,
	0x80, 0xb8, 0xe4, 0x19, 0xe0, 0x82, 0xa7, 0xe0, 0x2d, 0x78, 0x15, 0x24, 0x40, 0xa8, 0x4f, 0x76,
	0xb7, 0xed, 0x01, 0x96, 0xbb, 0xe9, 0xaa, 0xea, 0xea, 0xea, 0xaf, 0xbe, 0xaa, 0x6a, 0x0f, 0xc0,
	0x45, 0x1c, 0x7b, 0xe3, 0x24, 0x8d, 0xb3, 0x18, 0x99, 0x6e, 0x92, 0x8c, 0xc0, 0x73, 0x33, 0x97,
	0x0b, 0xec, 0x5f, 0x0c, 0xd8, 0x3c, 0xc6, 0xd9, 0x71, 0x1c, 0x7b, 0x8f, 0xdc, 0x0c, 0x5f, 0xc4,
	0xe9, 0xf5, 0x04, 0xbf, 0xce, 0x31, 0xc9, 0x10, 0x82, 0x76, 0x76, 0x9d, 0x60, 0xab, 0xb5, 0xd7,
	0x3a, 0x30, 0x27, 0xec, 0x37, 0x3a, 0x80, 0xd5, 0xa9, 0x30, 0x73, 0x7c, 0xcf, 0x09, 0x7c, 0x92,
	0x59, 0xc6, 0x9e, 0x79, 0x60, 0x4e, 0x06, 0x52, 0x7e, 0xe2, 0x3d, 0xf5, 0x49, 0x86, 0xde, 0x87,
	0xad, 0xc4, 0x4d, 0x71, 0x94, 0x39, 0xb5, 0x0d, 0x26, 0xdb, 0x30, 0xe4, 0xea, 0x47, 0xb5, 0x6d,
	0x04, 0x4f, 0xe3, 0xc8, 0xab, 0x6f, 0x6b, 0xf3, 0x6d, 0x5c, 0x5d, 0xd9, 0x66, 0xc1, 0xe2, 0xf4,
	0xd2, 0x8d, 0x22, 0x1c, 0x58, 0x1d, 0x16, 0xae, 0x5c, 0xa2, 0x5b, 0xd0, 0x3f, 0xcb, 0x89, 0x1f,
	0x61, 0x42, 0x1c, 0xdf, 0xb3, 0x16, 0x98, 0x16, 0xa4, 0xe8, 0xc4, 0x43, 0x6f, 0xc3, 0x5a, 0x61,
	0x70, 0x91, 0xc6, 0x79, 0x42, 0xcd, 0x16, 0x99, 0xd9, 0x8a, 0x54, 0x1c, 0x53, 0xf9, 0x89, 0x87,
	0x86, 0xd0, 0x09, 0xf0, 0x15, 0x0e, 0xac, 0x2e, 0xd3, 0xf3, 0x85, 0xfd, 0x29, 0x6c, 0xd5, 0x20,
	0x24, 0x49, 0x1c, 0x11, 0x8c, 0x6e, 0x43, 0x9b, 0xc5, 0xde, 0xda, 0x33, 0x0f, 0xfa, 0x87, 0x68,
	0xec, 0x26, 0xc9, 0x98, 0xa6, 0xa3, 0xb8, 0xdd, 0x84, 0xe9, 0xed, 0x1f, 0x0c, 0x58, 0xd6, 0xe4,
	0x68, 0x00, 0x86, 0xef, 0x09, 0xec, 0x0d, 0xdf, 0xa3, 0xd9, 0x88, 0xdc, 0x10, 0x5b, 0xc6, 0x5e,
	0xeb, 0xa0, 0x37, 0x61, 0xbf, 0xcb, 0x70, 0x4c, 0x25, 0x1c, 0xb4, 0x07, 0x4b, 0xe4, 0x32, 0x4e,
	0x1c, 0x92, 0x4c, 0x9d, 0x28, 0x0f, 0xad, 0x36, 0xbf, 0x32, 0x95, 0x9d, 0x26, 0xd3, 0xe7, 0x79,
	0x88, 0xfe, 0x0f, 0x83, 0x6f, 0x2e, 0xe3, 0x00, 0x93, 0xc2, 0x86, 0x83, 0xb6, 0xc4, 0xa5, 0xc2,
	0x6a, 0x07, 0x20, 0x0b, 0x0b, 0x0b, 0x0e, 0x5c, 0x37, 0x0b, 0x85, 0x76, 0x0c, 0xdd, 0xe9, 0xa5,
	0x1f, 0x78, 0x29, 0x8e, 0xac, 0xc5, 0xb9, 0xb7, 0x2b, 0x6c, 0xd0, 0x7d, 0xe8, 0x90, 0x04, 0x4f,
	0x89, 0xd5, 0x65, 0xc6, 0xbb, 0xa5, 0x31, 0x15, 0xfb, 0xe7, 0xfe, 0xd4, 0xcd, 0xfc, 0x38, 0x22,
	0x8e, 0x1f, 0x9d, 0xc7, 0x13, 0x6e, 0x6b, 0xff, 0xdc, 0x82, 0xad, 0xc7, 0x9e, 0xdf, 0x48, 0xcf,
	0x55, 0x30, 0xf3, 0x02, 0x21, 0xfa, 0xb3, 0x11, 0xa2, 0x35, 0x68, 0xb3, 0x84, 0x72, 0x84, 0x4c,
	0x9a, 0x44, 0x8e, 0x6c, 0xbb, 0x40, 0xb6, 0x40, 0xb1, 0xa3, 0xa2, 0xf8, 0xae, 0xc8, 0xdc, 0xc2,
	0xbf, 0x09, 0x97, 0x27, 0xf1, 0x18, 0x76, 0xab, 0xc1, 0x9e, 0x66, 0x6e, 0x96, 0x13, 0x19, 0xb2,
	0xcc, 0xa9, 0x29, 0x4e, 0xde, 0x84, 0x05, 0xc2, 0x0c, 0x58, 0xc8, 0xe6, 0x44, 0xac, 0xec, 0xaf,
	0x61, 0xfd, 0x08, 0x07, 0xfe, 0x15, 0x4e, 0xaf, 0x29, 0xbb, 0xe5, 0xf6, 0x0a, 0x95, 0x5b, 0x35,
	0x2a, 0x73, 0xff, 0x46, 0xe1, 0x7f, 0x03, 0x16, 0x48, 0x92, 0x97, 0xd7, 0xef, 0x90, 0x24, 0x3f,
	0xf1, 0xec, 0x87, 0x30, 0xd4, 0xdd, 0x0b, 0xb2, 0xee, 0x6b, 0x64, 0x5d, 0x63, 0x57, 0x96, 0x86,
	0x47, 0x6e, 0xe6, 0x8a, 0x6b, 0x12, 0x9e, 0x93, 0xff, 0x14, 0xa1, 0x48, 0x9a, 0x51, 0x26, 0x6d,
	0x1f, 0xda, 0xb4, 0x1d, 0xb1, 0x08, 0x9b, 0x0f, 0xa5, 0x6a, 0xfb, 0x2b, 0x40, 0x47, 0x38, 0x90,
	0x8a, 0x2a, 0xa0, 0x32, 0x95, 0x95, 0xf3, 0x8d, 0x79, 0xe7, 0x9b, 0xc5, 0xf9, 0xf6, 0x6f, 0x26,
	0xac, 0xc8, 0xac, 0x49, 0xb7, 0x25, 0x6e, 0x2d, 0x05, 0xb7, 0xa2, 0x21, 0x1a, 0x4a, 0x43, 0xbc,
	0x01, 0x3d, 0xe2, 0x06, 0xd8, 0xc9, 0xfc, 0x10, 0x0b, 0xb7, 0x5d, 0x2a, 0xf8, 0xc2, 0x0f, 0x31,
	0x1a, 0x41, 0x37, 0x88, 0x39, 0x51, 0x18, 0xdf, 0x7a, 0x93, 0x62, 0x8d, 0xb6, 0xa1, 0x4b, 0xcf,
	0x60, 0x84, 0xed, 0x30, 0xdd, 0x22, 0x49, 0xf2, 0xe7, 0x94, 0xb3, 0xb7, 0xa0, 0xaf, 0x34, 0x3f,
	0xd9, 0xb2, 0xca, 0xfe, 0x4a, 0x79, 0xe3, 0xe1, 0xcc, 0xf5, 0x03, 0xd6, 0xa7, 0x7a, 0x13, 0xb1,
	0xa2, 0x3e, 0x7d, 0xe2, 0x78, 0xa9, 0x7b, 0x9e, 0xb1, 0x0e, 0xd5, 0x9d, 0x2c, 0xfa, 0xe4, 0x88,
	0x2e, 0xd1, 0x4d, 0xe8, 0x50, 0xa6, 0x12, 0xab, 0xc7, 0x92, 0xdb, 0x65, 0x38, 0x9f, 0xce, 0xf2,
	0x09, 0x17, 0x2b, 0x54, 0x04, 0x95, 0x8a, 0x54, 0x9e, 0xa4, 0xf8, 0xdc, 0xff, 0xd6, 0xea, 0xf3,
	0xa3, 0xf8, 0x0a, 0xdd, 0x85, 0x85, 0xe4, 0x32, 0xce, 0x62, 0x62, 0x2d, 0x31, 0x87, 0xeb, 0xcc,
	0x21, 0x05, 0xf1, 0x95, 0x1f, 0xf9, 0xf9, 0x4b, 0xaa, 0x9b, 0x08, 0x13, 0xf4, 0x1e, 0xf4, 0x33,
	0x1c, 0x26, 0x8e, 0xd8, 0xb1, 0x3c, 0x7f, 0x07, 0x50, 0xbb, 0x97, 0x7c, 0xd7, 0x3d, 0xe8, 0x7a,
	0x22, 0xdf, 0xd6, 0x60, 0x1e, 0x25, 0x0b, 0x13, 0x99, 0xda, 0x95, 0x92, 0x5a, 0x15, 0x36, 0xac,
	0x56, 0xd9, 0x60, 0x9f, 0xc3, 0x40, 0x3f, 0x9f, 0x3a, 0x99, 0xe1, 0x6b, 0x96, 0xf6, 0xde, 0x84,
	0xfe, 0x54, 0x00, 0x30, 0x34, 0x00, 0x4a, 0xc0, 0x4c, 0x0d, 0x30, 0x49, 0x92, 0x76, 0x49, 0x12,
	0xfb, 0x2d, 0x58, 0x2d, 0x29, 0x26, 0x8a, 0xad, 0x99, 0x63, 0xf6, 0xf7, 0x2d, 0x58, 0xa3, 0x76,
	0x47, 0x2c, 0xa3, 0x2a, 0x21, 0x67, 0x9a, 0xf1, 0x8c, 0x12, 0xb2, 0xf4, 0x61, 0xa8, 0x3c, 0x6d,
	0x9c, 0x68, 0x66, 0xf3, 0x44, 0xdb, 0x05, 0xa0, 0x9e, 0xc5, 0x55, 0x78, 0xd0, 0x3d, 0x32, 0xcb,
	0x79, 0xe3, 0xb2, 0xff, 0x30, 0x01, 0xa9, 0xe1, 0xfc, 0x6d, 0xf0, 0x1a, 0xa7, 0x0d, 0x9d, 0xd3,
	0x1f, 0xc0, 0xb2, 0xcc, 0x14, 0x6b, 0x99, 0xec, 0x11, 0xd0, 0x98, 0xd1, 0x25, 0x69, 0x77, 0x12,
	0x9d, 0xc7, 0x0a, 0xcc, 0x6d, 0x0d, 0x66, 0xb5, 0xb4, 0x3a, 0x95, 0xd2, 0xfa, 0xc7, 0xfa, 0x79,
	0x07, 0x50, 0xfd, 0x6d, 0x22, 0x66, 0xfe, 0x6a, 0xf5, 0x59, 0xa2, 0x54, 0x5b, 0x57, 0xab, 0xb6,
	0xdb, 0x45, 0x09, 0xf0, 0x9a, 0x1a, 0xb0, 0xbb, 0x30, 0x1e, 0xd1, 0xd0, 0x0b, 0xf6, 0xef, 0x88,
	0xb6, 0x0a, 0x95, 0xca, 0x63, 0x52, 0xb4, 0x0f, 0x03, 0x7e, 0x25, 0x27, 0xc4, 0x84, 0xb8, 0x17,
	0x58, 0x14, 0xda, 0x32, 0x97, 0x3e, 0xe3, 0x42, 0x96, 0x27, 0x0a, 0x6d, 0x1e, 0x9e, 0xe1, 0xd4,
	0x5a, 0x62, 0x26, 0x3d, 0x0a, 0x2e, 0x13, 0xb0, 0x2b, 0xc7, 0x61, 0x48, 0xaf, 0x44, 0x87, 0xf5,
	0xb2, 0xb8, 0x32, 0x17, 0xd1, 0x71, 0x5d, 0xa9, 0x85, 0x95, 0x5a, 0x67, 0x1c, 0x42, 0x87, 0x64,
	0xf1, 0x74, 0x26, 0xca, 0x84, 0x2f, 0x28, 0x1d, 0x37, 0x2f, 0x70, 0xf6, 0x22, 0xf5, 0x70, 0x7a,
	0x3a, 0xcb, 0xd5, 0x5e, 0xff, 0x91, 0x68, 0xdc, 0x7c, 0x5a, 0xec, 0xf3, 0x01, 0xd9, 0x68, 0x3a,
	0xa6, 0x79, 0x7d, 0x1c, 0x65, 0xf4, 0xb5, 0x43, 0xb7, 0x8c, 0x3e, 0x84, 0x5e, 0x21, 0x52, 0x4b,
	0xce, 0xe4, 0x25, 0x37, 0x84, 0xce, 0x95, 0x1b, 0xe4, 0xb2, 0xd1, 0xf2, 0xc5, 0xc7, 0xc6, 0x83,
	0x96, 0xfd, 0x08, 0xb6, 0x6a, 0x47, 0x08, 0x4a, 0x1e, 0x68, 0xc3, 0x6b, 0x28, 0xc3, 0x39, 0xcd,
	0xcf, 0x98, 0xb9, 0x32, 0xbf, 0xbe, 0x33, 0x60, 0xa5, 0xa2, 0x61, 0x6d, 0x1c, 0x07, 0x01, 0x4e,
	0x4b, 0x4e, 0x77, 0xb9, 0xe0, 0xc4, 0x43, 0x67, 0xb0, 0xc9, 0x1e, 0x54, 0x82, 0x98, 0x4e, 0x92,
	0xfa, 0x53, 0xec, 0x84, 0x6e, 0xc2, 0x46, 0x6d, 0xff, 0xf0, 0x5e, 0xd3, 0x61, 0xe3, 0xd3, 0xcb,
	0x38, 0x11, 0xc4, 0x7e, 0x49, 0x37, 0x3c, 0x73, 0x13, 0x8e, 0xc1, 0x3a, 0xa9, 0x6b, 0xd0, 0x58,
	0x84, 0xcf, 0xcb, 0x62, 0x54, 0xf3, 0xc8, 0x28, 0x57, 0x5e, 0x62, 0xf4, 0x04, 0xac, 0x79, 0x07,
	0xbc, 0x11, 0xa2, 0xbf, 0xb6, 0x60, 0xa3, 0xf1, 0x9c, 0x79, 0x3d, 0x67, 0x15, 0x4c, 0xca, 0x30,
	0x31, 0xc1, 0xa3, 0x3c, 0x44, 0x77, 0x60, 0xc5, 0xbd, 0x48, 0x31, 0x66, 0xec, 0x63, 0xd8, 0x88,
	0x66, 0x33, 0x28, 0xc4, 0x2c, 0x3e, 0x1a, 0x05, 0x57, 0xf3, 0x52, 0xe6, 0x0b, 0xf4, 0x3f, 0x58,
	0x0a, 0x31, 0x25, 0xb1, 0xd8, 0xcb, 0x5f, 0x61, 0x7d, 0x2e, 0xe3, 0x1b, 0x77, 0x01, 0xa6, 0x31,
	0x91, 0xce, 0x79, 0x3d, 0xf7, 0xa8, 0x84, 0xab, 0xcb, 0x6e, 0xb4, 0xa8, 0xb6, 0xd2, 0xcf, 0x61,
	0x48, 0x6f, 0x46, 0xa3, 0x7e, 0x95, 0x2b, 0x8f, 0x86, 0x21, 0x74, 0x5e, 0xd3, 0xb5, 0xe8, 0xf2,
	0x7c, 0x41, 0xcf, 0x38, 0x4b, 0xdd, 0x48, 0xfb, 0xa6, 0xe9, 0x31, 0x09, 0xa5, 0x99, 0x7d, 0x97,
	0xc3, 0xa4, 0x38, 0x13, 0xbc, 0x43, 0x0a, 0xef, 0x4c, 0xc1, 0xb0, 0x2f, 0xe5, 0xc9, 0x2f, 0x12,
	0xf6, 0x48, 0x94, 0x27, 0xdf, 0x84, 0x3e, 0x0f, 0xd4, 0x51, 0xb6, 0xf4, 0x58, 0xb4, 0xec, 0x2b,
	0x86, 0xea, 0x67, 0x79, 0xe5, 0xc3, 0xaa, 0xc7, 0x70, 0x67, 0x41, 0xfc, 0xd8, 0x92, 0x51, 0x14,
	0x8e, 0x45, 0x14, 0x9f, 0xc0, 0x42, 0x8a, 0x49, 0x1e, 0x48, 0xfe, 0xdf, 0x2e, 0x08, 0x54, 0xb3,
	0x1d, 0x4f, 0x98, 0x21, 0xe7, 0xa2, 0xd8, 0x35, 0x7a, 0x06, 0x7d, 0x45, 0xdc, 0xc0, 0xa0, 0x03,
	0x95, 0x41, 0xf2, 0xad, 0x7f, 0xac, 0xf9, 0x57, 0x58, 0x75, 0x1f, 0x96, 0x35, 0x1d, 0xb2, 0xb5,
	0xea, 0x1c, 0xc8, 0x1e, 0xc8, 0xd5, 0x02, 0xb5, 0x3b, 0xb0, 0x46, 0x03, 0x4e, 0xb4, 0x2e, 0xd3,
	0x04, 0xef, 0x21, 0x20, 0xd5, 0x50, 0x40, 0xb0, 0xa3, 0x1d, 0x21, 0xda, 0x6c, 0x22, 0xda, 0xec,
	0xe1, 0x9f, 0x2d, 0x58, 0xd7, 0x1e, 0xe6, 0x38, 0xbd, 0xa2, 0xdc, 0xf9, 0xac, 0xfa, 0xdd, 0x75,
	0x43, 0xde, 0xac, 0xe1, 0x9b, 0x63, 0xb4, 0xd3, 0xac, 0x14, 0x11, 0x3c, 0x01, 0x84, 0x3d, 0x3f,
	0x73, 0x74, 0x87, 0x7c, 0xcf, 0x9c, 0xaf, 0x98, 0x11, 0x07, 0xf2, 0x71, 0x98, 0x64, 0xa5, 0x9f,
	0x53, 0xd8, 0xae, 0xfb, 0x11, 0x23, 0x1a, 0xd9, 0x8d, 0xee, 0xb4, 0xef, 0x8c, 0x26, 0xa7, 0x87,
	0xbf, 0x0b, 0x00, 0xe4, 0xac, 0x95, 0x00, 0x3c, 0x65, 0x94, 0x72, 0x8a, 0xe1, 0x4c, 0x1f, 0x60,
	0x81, 0x9b, 0x61, 0x64, 0x69, 0xa3, 0x59, 0xc9, 0xc9, 0x68, 0xbb, 0x41, 0x23, 0x42, 0x7f, 0x05,
	0x9b, 0x2c, 0xf4, 0xba, 0xbb, 0x12, 0x86, 0x37, 0x74, 0x79, 0x04, 0x1b, 0x1e, 0x0e, 0x1a, 0x3c,
	0x6e, 0xc9, 0x3d, 0x95, 0xaf, 0x82, 0xc6, 0xeb, 0xff, 0x64, 0x42, 0x9f, 0x5e, 0x5f, 0x5e, 0xfb,
	0x01, 0xf4, 0x0a, 0x8c, 0xd1, 0x50, 0xc3, 0x54, 0xba, 0xd9, 0xa8, 0x48, 0x8b, 0x52, 0xeb, 0xb3,
	0xc4, 0x88, 0x57, 0xc0, 0x66, 0xf1, 0x8c, 0xd5, 0x9e, 0x6c, 0xa3, 0xad, 0x9a, 0x5c, 0xec, 0x7f,
	0xca, 0xa6, 0x8f, 0x3a, 0xc3, 0x04, 0xe7, 0x9a, 0x87, 0xa7, 0xe0, 0xdc, 0xbc, 0xb1, 0x77, 0x02,
	0xab, 0x34, 0x7d, 0xa2, 0x6d, 0xf0, 0x56, 0xb6, 0xad, 0x14, 0xbf, 0xde, 0xfb, 0x46, 0xa3, 0x26,
	0x55, 0x41, 0xdf, 0x65, 0xad, 0x61, 0x68, 0x7e, 0xf4, 0x4e, 0xa6, 0xf9, 0xa9, 0xf6, 0xa2, 0x87,
	0x00, 0x65, 0x79, 0x0a, 0x7c, 0x6a, 0x85, 0x2d, 0xf0, 0xa9, 0xd7, 0xf1, 0xd9, 0x02, 0xfb, 0x63,
	0xea, 0xfe, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x73, 0x77, 0xed, 0x38, 0xb7, 0x12, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GoodCategoryServiceClient is the client API for GoodCategoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoodCategoryServiceClient interface {
	GoodCategory(ctx context.Context, in *GetGoodCategoryRequest, opts ...grpc.CallOption) (*GetGoodCategoryResponse, error)
	EditGoodCategory(ctx context.Context, in *EditGoodCategoryRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	EditGoodCategoryStatus(ctx context.Context, in *EditGoodCategoryStatusRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type goodCategoryServiceClient struct {
	cc *grpc.ClientConn
}

func NewGoodCategoryServiceClient(cc *grpc.ClientConn) GoodCategoryServiceClient {
	return &goodCategoryServiceClient{cc}
}

func (c *goodCategoryServiceClient) GoodCategory(ctx context.Context, in *GetGoodCategoryRequest, opts ...grpc.CallOption) (*GetGoodCategoryResponse, error) {
	out := new(GetGoodCategoryResponse)
	err := c.cc.Invoke(ctx, "/app.GoodCategoryService/good_category", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodCategoryServiceClient) EditGoodCategory(ctx context.Context, in *EditGoodCategoryRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/app.GoodCategoryService/edit_good_category", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodCategoryServiceClient) EditGoodCategoryStatus(ctx context.Context, in *EditGoodCategoryStatusRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/app.GoodCategoryService/edit_good_category_status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoodCategoryServiceServer is the server API for GoodCategoryService service.
type GoodCategoryServiceServer interface {
	GoodCategory(context.Context, *GetGoodCategoryRequest) (*GetGoodCategoryResponse, error)
	EditGoodCategory(context.Context, *EditGoodCategoryRequest) (*EmptyResponse, error)
	EditGoodCategoryStatus(context.Context, *EditGoodCategoryStatusRequest) (*EmptyResponse, error)
}

// UnimplementedGoodCategoryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGoodCategoryServiceServer struct {
}

func (*UnimplementedGoodCategoryServiceServer) GoodCategory(ctx context.Context, req *GetGoodCategoryRequest) (*GetGoodCategoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GoodCategory not implemented")
}
func (*UnimplementedGoodCategoryServiceServer) EditGoodCategory(ctx context.Context, req *EditGoodCategoryRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditGoodCategory not implemented")
}
func (*UnimplementedGoodCategoryServiceServer) EditGoodCategoryStatus(ctx context.Context, req *EditGoodCategoryStatusRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditGoodCategoryStatus not implemented")
}

func RegisterGoodCategoryServiceServer(s *grpc.Server, srv GoodCategoryServiceServer) {
	s.RegisterService(&_GoodCategoryService_serviceDesc, srv)
}

func _GoodCategoryService_GoodCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGoodCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodCategoryServiceServer).GoodCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.GoodCategoryService/GoodCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodCategoryServiceServer).GoodCategory(ctx, req.(*GetGoodCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoodCategoryService_EditGoodCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditGoodCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodCategoryServiceServer).EditGoodCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.GoodCategoryService/EditGoodCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodCategoryServiceServer).EditGoodCategory(ctx, req.(*EditGoodCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoodCategoryService_EditGoodCategoryStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditGoodCategoryStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodCategoryServiceServer).EditGoodCategoryStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.GoodCategoryService/EditGoodCategoryStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodCategoryServiceServer).EditGoodCategoryStatus(ctx, req.(*EditGoodCategoryStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoodCategoryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.GoodCategoryService",
	HandlerType: (*GoodCategoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "good_category",
			Handler:    _GoodCategoryService_GoodCategory_Handler,
		},
		{
			MethodName: "edit_good_category",
			Handler:    _GoodCategoryService_EditGoodCategory_Handler,
		},
		{
			MethodName: "edit_good_category_status",
			Handler:    _GoodCategoryService_EditGoodCategoryStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "good.proto",
}

// GoodDeliveryServiceClient is the client API for GoodDeliveryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoodDeliveryServiceClient interface {
	GetDeliveryTemplate(ctx context.Context, in *DeliveryListRequest, opts ...grpc.CallOption) (*DeliveryListResponse, error)
	EditDeliveryTemplate(ctx context.Context, in *EditDeliveryListRequest, opts ...grpc.CallOption) (*DeliveryListResponse, error)
	DelDeliveryTemplate(ctx context.Context, in *DelDeliveryRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type goodDeliveryServiceClient struct {
	cc *grpc.ClientConn
}

func NewGoodDeliveryServiceClient(cc *grpc.ClientConn) GoodDeliveryServiceClient {
	return &goodDeliveryServiceClient{cc}
}

func (c *goodDeliveryServiceClient) GetDeliveryTemplate(ctx context.Context, in *DeliveryListRequest, opts ...grpc.CallOption) (*DeliveryListResponse, error) {
	out := new(DeliveryListResponse)
	err := c.cc.Invoke(ctx, "/app.GoodDeliveryService/get_delivery_template", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodDeliveryServiceClient) EditDeliveryTemplate(ctx context.Context, in *EditDeliveryListRequest, opts ...grpc.CallOption) (*DeliveryListResponse, error) {
	out := new(DeliveryListResponse)
	err := c.cc.Invoke(ctx, "/app.GoodDeliveryService/edit_delivery_template", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodDeliveryServiceClient) DelDeliveryTemplate(ctx context.Context, in *DelDeliveryRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/app.GoodDeliveryService/del_delivery_template", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoodDeliveryServiceServer is the server API for GoodDeliveryService service.
type GoodDeliveryServiceServer interface {
	GetDeliveryTemplate(context.Context, *DeliveryListRequest) (*DeliveryListResponse, error)
	EditDeliveryTemplate(context.Context, *EditDeliveryListRequest) (*DeliveryListResponse, error)
	DelDeliveryTemplate(context.Context, *DelDeliveryRequest) (*EmptyResponse, error)
}

// UnimplementedGoodDeliveryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGoodDeliveryServiceServer struct {
}

func (*UnimplementedGoodDeliveryServiceServer) GetDeliveryTemplate(ctx context.Context, req *DeliveryListRequest) (*DeliveryListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeliveryTemplate not implemented")
}
func (*UnimplementedGoodDeliveryServiceServer) EditDeliveryTemplate(ctx context.Context, req *EditDeliveryListRequest) (*DeliveryListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditDeliveryTemplate not implemented")
}
func (*UnimplementedGoodDeliveryServiceServer) DelDeliveryTemplate(ctx context.Context, req *DelDeliveryRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelDeliveryTemplate not implemented")
}

func RegisterGoodDeliveryServiceServer(s *grpc.Server, srv GoodDeliveryServiceServer) {
	s.RegisterService(&_GoodDeliveryService_serviceDesc, srv)
}

func _GoodDeliveryService_GetDeliveryTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeliveryListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodDeliveryServiceServer).GetDeliveryTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.GoodDeliveryService/GetDeliveryTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodDeliveryServiceServer).GetDeliveryTemplate(ctx, req.(*DeliveryListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoodDeliveryService_EditDeliveryTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditDeliveryListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodDeliveryServiceServer).EditDeliveryTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.GoodDeliveryService/EditDeliveryTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodDeliveryServiceServer).EditDeliveryTemplate(ctx, req.(*EditDeliveryListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoodDeliveryService_DelDeliveryTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelDeliveryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodDeliveryServiceServer).DelDeliveryTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.GoodDeliveryService/DelDeliveryTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodDeliveryServiceServer).DelDeliveryTemplate(ctx, req.(*DelDeliveryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoodDeliveryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.GoodDeliveryService",
	HandlerType: (*GoodDeliveryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "get_delivery_template",
			Handler:    _GoodDeliveryService_GetDeliveryTemplate_Handler,
		},
		{
			MethodName: "edit_delivery_template",
			Handler:    _GoodDeliveryService_EditDeliveryTemplate_Handler,
		},
		{
			MethodName: "del_delivery_template",
			Handler:    _GoodDeliveryService_DelDeliveryTemplate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "good.proto",
}

// GoodServiceClient is the client API for GoodService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoodServiceClient interface {
	EditGood(ctx context.Context, in *EditGoodRequest, opts ...grpc.CallOption) (*EditGoodResponse, error)
	GoodDetail(ctx context.Context, in *GoodDetailRequest, opts ...grpc.CallOption) (*GoodDetailResponse, error)
	GetOrderSkuList(ctx context.Context, in *GetOrderSkuListRequest, opts ...grpc.CallOption) (*GetOrderSkuListResponse, error)
	GetSkuIdQuery(ctx context.Context, in *GetSkuIdQueryRequest, opts ...grpc.CallOption) (*GetSkuIdQueryResponse, error)
	GetSkuOptions(ctx context.Context, in *GetSkuOptionsRequest, opts ...grpc.CallOption) (*GetSkuOptionsResponse, error)
	GetSpuList(ctx context.Context, in *GetSpuListRequest, opts ...grpc.CallOption) (*GetSpuListResponse, error)
}

type goodServiceClient struct {
	cc *grpc.ClientConn
}

func NewGoodServiceClient(cc *grpc.ClientConn) GoodServiceClient {
	return &goodServiceClient{cc}
}

func (c *goodServiceClient) EditGood(ctx context.Context, in *EditGoodRequest, opts ...grpc.CallOption) (*EditGoodResponse, error) {
	out := new(EditGoodResponse)
	err := c.cc.Invoke(ctx, "/app.GoodService/edit_good", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodServiceClient) GoodDetail(ctx context.Context, in *GoodDetailRequest, opts ...grpc.CallOption) (*GoodDetailResponse, error) {
	out := new(GoodDetailResponse)
	err := c.cc.Invoke(ctx, "/app.GoodService/good_detail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodServiceClient) GetOrderSkuList(ctx context.Context, in *GetOrderSkuListRequest, opts ...grpc.CallOption) (*GetOrderSkuListResponse, error) {
	out := new(GetOrderSkuListResponse)
	err := c.cc.Invoke(ctx, "/app.GoodService/getOrderSkuList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodServiceClient) GetSkuIdQuery(ctx context.Context, in *GetSkuIdQueryRequest, opts ...grpc.CallOption) (*GetSkuIdQueryResponse, error) {
	out := new(GetSkuIdQueryResponse)
	err := c.cc.Invoke(ctx, "/app.GoodService/get_sku_id_query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodServiceClient) GetSkuOptions(ctx context.Context, in *GetSkuOptionsRequest, opts ...grpc.CallOption) (*GetSkuOptionsResponse, error) {
	out := new(GetSkuOptionsResponse)
	err := c.cc.Invoke(ctx, "/app.GoodService/getSkuOptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodServiceClient) GetSpuList(ctx context.Context, in *GetSpuListRequest, opts ...grpc.CallOption) (*GetSpuListResponse, error) {
	out := new(GetSpuListResponse)
	err := c.cc.Invoke(ctx, "/app.GoodService/getSpuList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoodServiceServer is the server API for GoodService service.
type GoodServiceServer interface {
	EditGood(context.Context, *EditGoodRequest) (*EditGoodResponse, error)
	GoodDetail(context.Context, *GoodDetailRequest) (*GoodDetailResponse, error)
	GetOrderSkuList(context.Context, *GetOrderSkuListRequest) (*GetOrderSkuListResponse, error)
	GetSkuIdQuery(context.Context, *GetSkuIdQueryRequest) (*GetSkuIdQueryResponse, error)
	GetSkuOptions(context.Context, *GetSkuOptionsRequest) (*GetSkuOptionsResponse, error)
	GetSpuList(context.Context, *GetSpuListRequest) (*GetSpuListResponse, error)
}

// UnimplementedGoodServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGoodServiceServer struct {
}

func (*UnimplementedGoodServiceServer) EditGood(ctx context.Context, req *EditGoodRequest) (*EditGoodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditGood not implemented")
}
func (*UnimplementedGoodServiceServer) GoodDetail(ctx context.Context, req *GoodDetailRequest) (*GoodDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GoodDetail not implemented")
}
func (*UnimplementedGoodServiceServer) GetOrderSkuList(ctx context.Context, req *GetOrderSkuListRequest) (*GetOrderSkuListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrderSkuList not implemented")
}
func (*UnimplementedGoodServiceServer) GetSkuIdQuery(ctx context.Context, req *GetSkuIdQueryRequest) (*GetSkuIdQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSkuIdQuery not implemented")
}
func (*UnimplementedGoodServiceServer) GetSkuOptions(ctx context.Context, req *GetSkuOptionsRequest) (*GetSkuOptionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSkuOptions not implemented")
}
func (*UnimplementedGoodServiceServer) GetSpuList(ctx context.Context, req *GetSpuListRequest) (*GetSpuListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSpuList not implemented")
}

func RegisterGoodServiceServer(s *grpc.Server, srv GoodServiceServer) {
	s.RegisterService(&_GoodService_serviceDesc, srv)
}

func _GoodService_EditGood_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditGoodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodServiceServer).EditGood(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.GoodService/EditGood",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodServiceServer).EditGood(ctx, req.(*EditGoodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoodService_GoodDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GoodDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodServiceServer).GoodDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.GoodService/GoodDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodServiceServer).GoodDetail(ctx, req.(*GoodDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoodService_GetOrderSkuList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrderSkuListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodServiceServer).GetOrderSkuList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.GoodService/GetOrderSkuList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodServiceServer).GetOrderSkuList(ctx, req.(*GetOrderSkuListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoodService_GetSkuIdQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSkuIdQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodServiceServer).GetSkuIdQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.GoodService/GetSkuIdQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodServiceServer).GetSkuIdQuery(ctx, req.(*GetSkuIdQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoodService_GetSkuOptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSkuOptionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodServiceServer).GetSkuOptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.GoodService/GetSkuOptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodServiceServer).GetSkuOptions(ctx, req.(*GetSkuOptionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoodService_GetSpuList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSpuListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodServiceServer).GetSpuList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.GoodService/GetSpuList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodServiceServer).GetSpuList(ctx, req.(*GetSpuListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoodService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.GoodService",
	HandlerType: (*GoodServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "edit_good",
			Handler:    _GoodService_EditGood_Handler,
		},
		{
			MethodName: "good_detail",
			Handler:    _GoodService_GoodDetail_Handler,
		},
		{
			MethodName: "getOrderSkuList",
			Handler:    _GoodService_GetOrderSkuList_Handler,
		},
		{
			MethodName: "get_sku_id_query",
			Handler:    _GoodService_GetSkuIdQuery_Handler,
		},
		{
			MethodName: "getSkuOptions",
			Handler:    _GoodService_GetSkuOptions_Handler,
		},
		{
			MethodName: "getSpuList",
			Handler:    _GoodService_GetSpuList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "good.proto",
}
