// Code generated by protoc-gen-go. DO NOT EDIT.
// source: system.proto

package app

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FeedbackRequest struct {
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Uid                  int64    `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Status               int64    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Id                   int64    `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeedbackRequest) Reset()         { *m = FeedbackRequest{} }
func (m *FeedbackRequest) String() string { return proto.CompactTextString(m) }
func (*FeedbackRequest) ProtoMessage()    {}
func (*FeedbackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{0}
}

func (m *FeedbackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedbackRequest.Unmarshal(m, b)
}
func (m *FeedbackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedbackRequest.Marshal(b, m, deterministic)
}
func (m *FeedbackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedbackRequest.Merge(m, src)
}
func (m *FeedbackRequest) XXX_Size() int {
	return xxx_messageInfo_FeedbackRequest.Size(m)
}
func (m *FeedbackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedbackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FeedbackRequest proto.InternalMessageInfo

func (m *FeedbackRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *FeedbackRequest) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *FeedbackRequest) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *FeedbackRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type FeedbackData struct {
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Uid                  int64    `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Id                   int64    `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime           int64    `protobuf:"varint,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeedbackData) Reset()         { *m = FeedbackData{} }
func (m *FeedbackData) String() string { return proto.CompactTextString(m) }
func (*FeedbackData) ProtoMessage()    {}
func (*FeedbackData) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{1}
}

func (m *FeedbackData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedbackData.Unmarshal(m, b)
}
func (m *FeedbackData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedbackData.Marshal(b, m, deterministic)
}
func (m *FeedbackData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedbackData.Merge(m, src)
}
func (m *FeedbackData) XXX_Size() int {
	return xxx_messageInfo_FeedbackData.Size(m)
}
func (m *FeedbackData) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedbackData.DiscardUnknown(m)
}

var xxx_messageInfo_FeedbackData proto.InternalMessageInfo

func (m *FeedbackData) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *FeedbackData) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *FeedbackData) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FeedbackData) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *FeedbackData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type FeedbackResponse struct {
	List                 []*FeedbackData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FeedbackResponse) Reset()         { *m = FeedbackResponse{} }
func (m *FeedbackResponse) String() string { return proto.CompactTextString(m) }
func (*FeedbackResponse) ProtoMessage()    {}
func (*FeedbackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{2}
}

func (m *FeedbackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedbackResponse.Unmarshal(m, b)
}
func (m *FeedbackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedbackResponse.Marshal(b, m, deterministic)
}
func (m *FeedbackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedbackResponse.Merge(m, src)
}
func (m *FeedbackResponse) XXX_Size() int {
	return xxx_messageInfo_FeedbackResponse.Size(m)
}
func (m *FeedbackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedbackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FeedbackResponse proto.InternalMessageInfo

func (m *FeedbackResponse) GetList() []*FeedbackData {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*FeedbackRequest)(nil), "app.FeedbackRequest")
	proto.RegisterType((*FeedbackData)(nil), "app.FeedbackData")
	proto.RegisterType((*FeedbackResponse)(nil), "app.FeedbackResponse")
}

func init() { proto.RegisterFile("system.proto", fileDescriptor_86a7260ebdc12f47) }

var fileDescriptor_86a7260ebdc12f47 = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x49, 0xb7, 0x56, 0x9c, 0xa6, 0x5a, 0x07, 0x95, 0xa5, 0x17, 0x4b, 0x40, 0xc8, 0x29,
	0x87, 0x7a, 0xb1, 0xe0, 0x51, 0x7d, 0x80, 0xe8, 0x3d, 0x6c, 0xb3, 0x23, 0x2c, 0x9a, 0x64, 0xcd,
	0x4e, 0x84, 0x9e, 0x7c, 0x39, 0x1f, 0x4c, 0xb2, 0x49, 0xac, 0x0a, 0x1e, 0xf4, 0x36, 0xf3, 0x2d,
	0xff, 0xff, 0xcf, 0xce, 0x40, 0xe8, 0xb6, 0x8e, 0xa9, 0x48, 0x6c, 0x5d, 0x71, 0x85, 0x42, 0x59,
	0xbb, 0x00, 0xad, 0x58, 0x75, 0x20, 0x22, 0x38, 0xba, 0x23, 0xd2, 0x1b, 0x95, 0x3f, 0xa5, 0xf4,
	0xd2, 0x90, 0x63, 0x94, 0xb0, 0x9f, 0x57, 0x25, 0x53, 0xc9, 0x32, 0x58, 0x06, 0xf1, 0x41, 0x3a,
	0xb4, 0x38, 0x07, 0xd1, 0x18, 0x2d, 0x47, 0xcb, 0x20, 0x16, 0x69, 0x5b, 0xe2, 0x19, 0x4c, 0x1c,
	0x2b, 0x6e, 0x9c, 0x14, 0x1e, 0xf6, 0x1d, 0x1e, 0xc2, 0xc8, 0x68, 0x39, 0xf6, 0x6c, 0x64, 0x74,
	0xf4, 0x06, 0xe1, 0x10, 0x73, 0xa3, 0x58, 0xfd, 0x29, 0xa3, 0xf3, 0x12, 0x83, 0x17, 0x9e, 0xc3,
	0x34, 0xaf, 0x49, 0x31, 0x65, 0x6c, 0x0a, 0xea, 0x43, 0xa0, 0x43, 0x0f, 0xa6, 0x20, 0x44, 0x18,
	0x97, 0xaa, 0x20, 0xb9, 0xe7, 0x9d, 0x7d, 0x1d, 0xad, 0x61, 0xbe, 0xfb, 0xa7, 0xb3, 0x55, 0xe9,
	0x08, 0x2f, 0x60, 0xfc, 0x6c, 0x5c, 0x3b, 0x81, 0x88, 0xa7, 0xab, 0xe3, 0x44, 0x59, 0x9b, 0x7c,
	0x9d, 0x32, 0xf5, 0xcf, 0xab, 0xf7, 0x60, 0xb7, 0xa3, 0x7b, 0xaa, 0x5f, 0x4d, 0x4e, 0x78, 0x05,
	0xa1, 0xd2, 0x3a, 0x7b, 0xec, 0x31, 0x9e, 0x7c, 0x13, 0xf7, 0x9b, 0x5c, 0xa0, 0xa7, 0xb7, 0x85,
	0xe5, 0xed, 0x67, 0xe8, 0x35, 0xcc, 0x06, 0x55, 0xd6, 0xda, 0xff, 0x22, 0x3d, 0xfd, 0x41, 0x7b,
	0xf5, 0x1a, 0x66, 0xa4, 0x0d, 0xff, 0x23, 0x78, 0x33, 0xf1, 0x07, 0xbf, 0xfc, 0x08, 0x00, 0x00,
	0xff, 0xff, 0x5f, 0x72, 0x3b, 0x8d, 0x11, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FeedbackServiceClient is the client API for FeedbackService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FeedbackServiceClient interface {
	//检查通道连接
	AddFeedback(ctx context.Context, in *FeedbackRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	FeedbackList(ctx context.Context, in *FeedbackRequest, opts ...grpc.CallOption) (*FeedbackResponse, error)
	EditFeedback(ctx context.Context, in *FeedbackRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type feedbackServiceClient struct {
	cc *grpc.ClientConn
}

func NewFeedbackServiceClient(cc *grpc.ClientConn) FeedbackServiceClient {
	return &feedbackServiceClient{cc}
}

func (c *feedbackServiceClient) AddFeedback(ctx context.Context, in *FeedbackRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/app.FeedbackService/add_feedback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feedbackServiceClient) FeedbackList(ctx context.Context, in *FeedbackRequest, opts ...grpc.CallOption) (*FeedbackResponse, error) {
	out := new(FeedbackResponse)
	err := c.cc.Invoke(ctx, "/app.FeedbackService/feedback_list", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feedbackServiceClient) EditFeedback(ctx context.Context, in *FeedbackRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/app.FeedbackService/edit_feedback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FeedbackServiceServer is the server API for FeedbackService service.
type FeedbackServiceServer interface {
	//检查通道连接
	AddFeedback(context.Context, *FeedbackRequest) (*EmptyResponse, error)
	FeedbackList(context.Context, *FeedbackRequest) (*FeedbackResponse, error)
	EditFeedback(context.Context, *FeedbackRequest) (*EmptyResponse, error)
}

// UnimplementedFeedbackServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFeedbackServiceServer struct {
}

func (*UnimplementedFeedbackServiceServer) AddFeedback(ctx context.Context, req *FeedbackRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFeedback not implemented")
}
func (*UnimplementedFeedbackServiceServer) FeedbackList(ctx context.Context, req *FeedbackRequest) (*FeedbackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FeedbackList not implemented")
}
func (*UnimplementedFeedbackServiceServer) EditFeedback(ctx context.Context, req *FeedbackRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditFeedback not implemented")
}

func RegisterFeedbackServiceServer(s *grpc.Server, srv FeedbackServiceServer) {
	s.RegisterService(&_FeedbackService_serviceDesc, srv)
}

func _FeedbackService_AddFeedback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FeedbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeedbackServiceServer).AddFeedback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.FeedbackService/AddFeedback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeedbackServiceServer).AddFeedback(ctx, req.(*FeedbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeedbackService_FeedbackList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FeedbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeedbackServiceServer).FeedbackList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.FeedbackService/FeedbackList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeedbackServiceServer).FeedbackList(ctx, req.(*FeedbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeedbackService_EditFeedback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FeedbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeedbackServiceServer).EditFeedback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.FeedbackService/EditFeedback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeedbackServiceServer).EditFeedback(ctx, req.(*FeedbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FeedbackService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.FeedbackService",
	HandlerType: (*FeedbackServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "add_feedback",
			Handler:    _FeedbackService_AddFeedback_Handler,
		},
		{
			MethodName: "feedback_list",
			Handler:    _FeedbackService_FeedbackList_Handler,
		},
		{
			MethodName: "edit_feedback",
			Handler:    _FeedbackService_EditFeedback_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "system.proto",
}
